<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0812.0001                               -->
<workbook source-build='10.0.0 (10000.16.0812.0001)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' inline='true' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2015 Stack Overflow Developer Survey Responses Working Copy' name='excel-direct.1fx68ds1oznofl16hd6qp1tph17u'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\Saurabh\Desktop\Project Docs\2015 Stack Overflow Developer Survey Responses Working Copy.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1fx68ds1oznofl16hd6qp1tph17u' name='2015 Stack Overflow Developer S' table='[&apos;2015 Stack Overflow Developer S$&apos;]' type='table'>
          <columns gridOrigin='A1:HN10001:no:A1:HN2147483647:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Age' ordinal='1' />
            <column datatype='string' name='Gender' ordinal='2' />
            <column datatype='string' name='Tabs or Spaces' ordinal='3' />
            <column datatype='string' name='Years IT / Programming Experience' ordinal='4' />
            <column datatype='string' name='Occupation' ordinal='5' />
            <column datatype='string' name='Desktop Operating System' ordinal='6' />
            <column datatype='string' name='Desktop Operating System: write-in' ordinal='7' />
            <column datatype='string' name='Current Lang &amp; Tech: Android' ordinal='8' />
            <column datatype='string' name='Current Lang &amp; Tech: Arduino' ordinal='9' />
            <column datatype='string' name='Current Lang &amp; Tech: AngularJS' ordinal='10' />
            <column datatype='string' name='Current Lang &amp; Tech: C' ordinal='11' />
            <column datatype='string' name='Current Lang &amp; Tech: C++' ordinal='12' />
            <column datatype='string' name='Current Lang &amp; Tech: C++11' ordinal='13' />
            <column datatype='string' name='Current Lang &amp; Tech: C#' ordinal='14' />
            <column datatype='string' name='Current Lang &amp; Tech: Cassandra' ordinal='15' />
            <column datatype='string' name='Current Lang &amp; Tech: CoffeeScript' ordinal='16' />
            <column datatype='string' name='Current Lang &amp; Tech: Cordova' ordinal='17' />
            <column datatype='string' name='Current Lang &amp; Tech: Clojure' ordinal='18' />
            <column datatype='string' name='Current Lang &amp; Tech: Cloud' ordinal='19' />
            <column datatype='string' name='Current Lang &amp; Tech: Dart' ordinal='20' />
            <column datatype='string' name='Current Lang &amp; Tech: F#' ordinal='21' />
            <column datatype='string' name='Current Lang &amp; Tech: Go' ordinal='22' />
            <column datatype='string' name='Current Lang &amp; Tech: Hadoop' ordinal='23' />
            <column datatype='string' name='Current Lang &amp; Tech: Haskell' ordinal='24' />
            <column datatype='string' name='Current Lang &amp; Tech: iOS' ordinal='25' />
            <column datatype='string' name='Current Lang &amp; Tech: Java' ordinal='26' />
            <column datatype='string' name='Current Lang &amp; Tech: JavaScript' ordinal='27' />
            <column datatype='string' name='Current Lang &amp; Tech: LAMP' ordinal='28' />
            <column datatype='string' name='Current Lang &amp; Tech: Matlab' ordinal='29' />
            <column datatype='string' name='Current Lang &amp; Tech: MongoDB' ordinal='30' />
            <column datatype='string' name='Current Lang &amp; Tech: Node.js' ordinal='31' />
            <column datatype='string' name='Current Lang &amp; Tech: Objective-C' ordinal='32' />
            <column datatype='string' name='Current Lang &amp; Tech: Perl' ordinal='33' />
            <column datatype='string' name='Current Lang &amp; Tech: PHP' ordinal='34' />
            <column datatype='string' name='Current Lang &amp; Tech: Python' ordinal='35' />
            <column datatype='string' name='Current Lang &amp; Tech: R' ordinal='36' />
            <column datatype='string' name='Current Lang &amp; Tech: Redis' ordinal='37' />
            <column datatype='string' name='Current Lang &amp; Tech: Ruby' ordinal='38' />
            <column datatype='string' name='Current Lang &amp; Tech: Rust' ordinal='39' />
            <column datatype='string' name='Current Lang &amp; Tech: Salesforce' ordinal='40' />
            <column datatype='string' name='Current Lang &amp; Tech: Scala' ordinal='41' />
            <column datatype='string' name='Current Lang &amp; Tech: Sharepoint' ordinal='42' />
            <column datatype='string' name='Current Lang &amp; Tech: Spark' ordinal='43' />
            <column datatype='string' name='Current Lang &amp; Tech: SQL' ordinal='44' />
            <column datatype='string' name='Current Lang &amp; Tech: SQL Server' ordinal='45' />
            <column datatype='string' name='Current Lang &amp; Tech: Swift' ordinal='46' />
            <column datatype='string' name='Current Lang &amp; Tech: Visual Basic' ordinal='47' />
            <column datatype='string' name='Current Lang &amp; Tech: Windows Phone' ordinal='48' />
            <column datatype='string' name='Current Lang &amp; Tech: Wordpress' ordinal='49' />
            <column datatype='string' name='Current Lang &amp; Tech: Write-In' ordinal='50' />
            <column datatype='string' name='Future Lang &amp; Tech: Android' ordinal='51' />
            <column datatype='string' name='Future Lang &amp; Tech: Arduino' ordinal='52' />
            <column datatype='string' name='Future Lang &amp; Tech: AngularJS' ordinal='53' />
            <column datatype='string' name='Future Lang &amp; Tech: C' ordinal='54' />
            <column datatype='string' name='Future Lang &amp; Tech: C++' ordinal='55' />
            <column datatype='string' name='Future Lang &amp; Tech: C++11' ordinal='56' />
            <column datatype='string' name='Future Lang &amp; Tech: C#' ordinal='57' />
            <column datatype='string' name='Future Lang &amp; Tech: Cassandra' ordinal='58' />
            <column datatype='string' name='Future Lang &amp; Tech: CoffeeScript' ordinal='59' />
            <column datatype='string' name='Future Lang &amp; Tech: Cordova' ordinal='60' />
            <column datatype='string' name='Future Lang &amp; Tech: Clojure' ordinal='61' />
            <column datatype='string' name='Future Lang &amp; Tech: Cloud' ordinal='62' />
            <column datatype='string' name='Future Lang &amp; Tech: Dart' ordinal='63' />
            <column datatype='string' name='Future Lang &amp; Tech: F#' ordinal='64' />
            <column datatype='string' name='Future Lang &amp; Tech: Go' ordinal='65' />
            <column datatype='string' name='Future Lang &amp; Tech: Hadoop' ordinal='66' />
            <column datatype='string' name='Future Lang &amp; Tech: Haskell' ordinal='67' />
            <column datatype='string' name='Future Lang &amp; Tech: iOS' ordinal='68' />
            <column datatype='string' name='Future Lang &amp; Tech: Java' ordinal='69' />
            <column datatype='string' name='Future Lang &amp; Tech: JavaScript' ordinal='70' />
            <column datatype='string' name='Future Lang &amp; Tech: LAMP' ordinal='71' />
            <column datatype='string' name='Future Lang &amp; Tech: Matlab' ordinal='72' />
            <column datatype='string' name='Future Lang &amp; Tech: MongoDB' ordinal='73' />
            <column datatype='string' name='Future Lang &amp; Tech: Node.js' ordinal='74' />
            <column datatype='string' name='Future Lang &amp; Tech: Objective-C' ordinal='75' />
            <column datatype='string' name='Future Lang &amp; Tech: Perl' ordinal='76' />
            <column datatype='string' name='Future Lang &amp; Tech: PHP' ordinal='77' />
            <column datatype='string' name='Future Lang &amp; Tech: Python' ordinal='78' />
            <column datatype='string' name='Future Lang &amp; Tech: R' ordinal='79' />
            <column datatype='string' name='Future Lang &amp; Tech: Redis' ordinal='80' />
            <column datatype='string' name='Future Lang &amp; Tech: Ruby' ordinal='81' />
            <column datatype='string' name='Future Lang &amp; Tech: Rust' ordinal='82' />
            <column datatype='string' name='Future Lang &amp; Tech: Salesforce' ordinal='83' />
            <column datatype='string' name='Future Lang &amp; Tech: Scala' ordinal='84' />
            <column datatype='string' name='Future Lang &amp; Tech: Sharepoint' ordinal='85' />
            <column datatype='string' name='Future Lang &amp; Tech: Spark' ordinal='86' />
            <column datatype='string' name='Future Lang &amp; Tech: SQL' ordinal='87' />
            <column datatype='string' name='Future Lang &amp; Tech: SQL Server' ordinal='88' />
            <column datatype='string' name='Future Lang &amp; Tech: Swift' ordinal='89' />
            <column datatype='string' name='Future Lang &amp; Tech: Visual Basic' ordinal='90' />
            <column datatype='string' name='Future Lang &amp; Tech: Windows Phone' ordinal='91' />
            <column datatype='string' name='Future Lang &amp; Tech: Wordpress' ordinal='92' />
            <column datatype='string' name='Future Lang &amp; Tech: Write-In' ordinal='93' />
            <column datatype='string' name='Training &amp; Education: No formal training' ordinal='94' />
            <column datatype='string' name='Training &amp; Education: On the job' ordinal='95' />
            <column datatype='string' name='Training &amp; Education: Boot camp or night school' ordinal='96' />
            <column datatype='string' name='Training &amp; Education: Online Class' ordinal='97' />
            <column datatype='string' name='Training &amp; Education: Mentorship' ordinal='98' />
            <column datatype='string' name='Training &amp; Education: Industry certification' ordinal='99' />
            <column datatype='string' name='Training &amp; Education: Some college, but no CS degree' ordinal='100' />
            <column datatype='string' name='Training &amp; Education: BS in CS' ordinal='101' />
            <column datatype='string' name='Training &amp; Education: Masters in CS' ordinal='102' />
            <column datatype='string' name='Training &amp; Education: PhD in CS' ordinal='103' />
            <column datatype='string' name='Training &amp; Education: Other' ordinal='104' />
            <column datatype='string' name='Compensation' ordinal='105' />
            <column datatype='integer' name='Compensation: midpoint' ordinal='106' />
            <column datatype='string' name='Employment Status' ordinal='107' />
            <column datatype='string' name='Industry' ordinal='108' />
            <column datatype='string' name='Job Satisfaction' ordinal='109' />
            <column datatype='string' name='Purchasing Power' ordinal='110' />
            <column datatype='string' name='Remote Status' ordinal='111' />
            <column datatype='string' name='Changed Jobs in last 12 Months' ordinal='112' />
            <column datatype='string' name='Open to new job opportunities' ordinal='113' />
            <column datatype='string' name='Most important aspect of new job opportunity: Salary' ordinal='114' />
            <column datatype='string' name='Most important aspect of new job opportunity: Equity' ordinal='115' />
            <column datatype='string' name='Most important aspect of new job opportunity: Important decisions' ordinal='116' />
            <column datatype='string' name='Most important aspect of new job opportunity: Health insurance' ordinal='117' />
            <column datatype='string' name='Most important aspect of new job opportunity: Industry' ordinal='118' />
            <column datatype='string' name='Most important aspect of new job opportunity: Tech stack' ordinal='119' />
            <column datatype='string' name='Most important aspect of new job opportunity: Company size' ordinal='120' />
            <column datatype='string' name='Most important aspect of new job opportunity: Company stage' ordinal='121' />
            <column datatype='string' name='Most important aspect of new job opportunity: Work - Life balance' ordinal='122' />
            <column datatype='string' name='Most important aspect of new job opportunity: Advancement' ordinal='123' />
            <column datatype='string' name='Most important aspect of new job opportunity: Job title' ordinal='124' />
            <column datatype='string' name='Most important aspect of new job opportunity: Office location' ordinal='125' />
            <column datatype='string' name='Most important aspect of new job opportunity: Quality of colleagues' ordinal='126' />
            <column datatype='string' name='Most important aspect of new job opportunity: Company culture' ordinal='127' />
            <column datatype='string' name='Most important aspect of new job opportunity: Company reputation' ordinal='128' />
            <column datatype='string' name='Most important aspect of new job opportunity: Building something that matters' ordinal='129' />
            <column datatype='string' name='Most important aspect of new job opportunity: Remote working' ordinal='130' />
            <column datatype='string' name='Most important aspect of new job opportunity: Flexible work options' ordinal='131' />
            <column datatype='string' name='How important is remote when evaluating new job opportunity?' ordinal='132' />
            <column datatype='string' name='Most annoying about job search: Finding time' ordinal='133' />
            <column datatype='string' name='Most annoying about job search: Finding job I&apos;m qualified for' ordinal='134' />
            <column datatype='string' name='Most annoying about job search: Finding interesting job' ordinal='135' />
            <column datatype='string' name='Most annoying about job search: Interesting companies rarely respond' ordinal='136' />
            <column datatype='string' name='Most annoying about job search: Writing and updating CV' ordinal='137' />
            <column datatype='string' name='Most annoying about job search: Taking time off work to interview' ordinal='138' />
            <column datatype='string' name='Most annoying about job search: The Interview' ordinal='139' />
            <column datatype='string' name='How often contacted by recruiters' ordinal='140' />
            <column datatype='string' name='Perception of recruiter contact' ordinal='141' />
            <column datatype='string' name='Perception of contact form: Email' ordinal='142' />
            <column datatype='string' name='Perception of contact form: LinkedIn' ordinal='143' />
            <column datatype='string' name='Perception of contact form: Xing' ordinal='144' />
            <column datatype='string' name='Perception of contact form: Phone' ordinal='145' />
            <column datatype='string' name='Perception of contact form: Stack Overflow Careers' ordinal='146' />
            <column datatype='string' name='Perception of contact form: Twitter' ordinal='147' />
            <column datatype='string' name='Perception of contact form: Facebook' ordinal='148' />
            <column datatype='string' name='Appealing message traits: Message is personalized' ordinal='149' />
            <column datatype='string' name='Appealing message traits: Code or projects mentioned' ordinal='150' />
            <column datatype='string' name='Appealing message traits: Stack Overflow activity mentioned' ordinal='151' />
            <column datatype='string' name='Appealing message traits: Team described' ordinal='152' />
            <column datatype='string' name='Appealing message traits: Company culture described' ordinal='153' />
            <column datatype='string' name='Appealing message traits: Salary information' ordinal='154' />
            <column datatype='string' name='Appealing message traits: Benefits &amp; Perks' ordinal='155' />
            <column datatype='string' name='Appealing message traits: Stack Overflow Company Page' ordinal='156' />
            <column datatype='string' name='Most urgent info about job opportunity: Salary' ordinal='157' />
            <column datatype='string' name='Most urgent info about job opportunity: Benefits' ordinal='158' />
            <column datatype='string' name='Most urgent info about job opportunity: Company name' ordinal='159' />
            <column datatype='string' name='Most urgent info about job opportunity: Tech stack' ordinal='160' />
            <column datatype='string' name='Most urgent info about job opportunity: Office location' ordinal='161' />
            <column datatype='string' name='Most urgent info about job opportunity: Job title' ordinal='162' />
            <column datatype='string' name='Most urgent info about job opportunity: Colleagues' ordinal='163' />
            <column datatype='string' name='Most urgent info about job opportunity: Product details' ordinal='164' />
            <column datatype='string' name='Who do you want to communicate with about a new job opportunity: Headhunter' ordinal='165' />
            <column datatype='string' name='Who do you want to communicate with about a new job opportunity: In-house recruiter' ordinal='166' />
            <column datatype='string' name='Who do you want to communicate with about a new job opportunity: In-house tech recruiter' ordinal='167' />
            <column datatype='string' name='Who do you want to communicate with about a new job opportunity: Manager' ordinal='168' />
            <column datatype='string' name='Who do you want to communicate with about a new job opportunity: Developer' ordinal='169' />
            <column datatype='string' name='How can companies improve interview process: More live code' ordinal='170' />
            <column datatype='string' name='How can companies improve interview process: Flexible interview schedule' ordinal='171' />
            <column datatype='string' name='How can companies improve interview process: Remote interviews' ordinal='172' />
            <column datatype='string' name='How can companies improve interview process: Introduce me to boss' ordinal='173' />
            <column datatype='string' name='How can companies improve interview process: Introduce me to team' ordinal='174' />
            <column datatype='string' name='How can companies improve interview process: Gimme coffee' ordinal='175' />
            <column datatype='string' name='How can companies improve interview process: Show me workplace' ordinal='176' />
            <column datatype='string' name='How can companies improve interview process: Fewer brainteasers' ordinal='177' />
            <column datatype='string' name='How can companies improve interview process: Better preparation' ordinal='178' />
            <column datatype='string' name='Why try Stack Overflow Careers: No spam' ordinal='179' />
            <column datatype='string' name='Why try Stack Overflow Careers: Jobs site for programmers' ordinal='180' />
            <column datatype='string' name='Why try Stack Overflow Careers: Selection of revelant jobs' ordinal='181' />
            <column datatype='string' name='Why try Stack Overflow Careers: Showcase Stack Overflow activity' ordinal='182' />
            <column datatype='string' name='Why try Stack Overflow Careers: Jobs are on Stack Overflow' ordinal='183' />
            <column datatype='string' name='Why try Stack Overflow Careers: Other' ordinal='184' />
            <column datatype='string' name='How many caffeinated beverages per day?' ordinal='185' />
            <column datatype='string' name='How many hours programming as hobby per week?' ordinal='186' />
            <column datatype='string' name='How frequently land on or read Stack Overflow' ordinal='187' />
            <column datatype='string' name='Preferred text editor' ordinal='188' />
            <column datatype='string' name='Preferred text editor: write-in' ordinal='189' />
            <column datatype='string' name='Prefered IDE theme' ordinal='190' />
            <column datatype='string' name='Source control used: Git' ordinal='191' />
            <column datatype='string' name='Source control used: Mercurial' ordinal='192' />
            <column datatype='string' name='Source control used: SVN' ordinal='193' />
            <column datatype='string' name='Source control used: CVS' ordinal='194' />
            <column datatype='string' name='Source control used: Perforce' ordinal='195' />
            <column datatype='string' name='Source control used: TFS' ordinal='196' />
            <column datatype='string' name='Source control used: DCVS' ordinal='197' />
            <column datatype='string' name='Source control used: Bitkeeper' ordinal='198' />
            <column datatype='string' name='Source control used: Legacy / Custom' ordinal='199' />
            <column datatype='string' name='Source control used: I don&apos;t use source control' ordinal='200' />
            <column datatype='string' name='Source control used: write-in' ordinal='201' />
            <column datatype='string' name='Prefered Source Control' ordinal='202' />
            <column datatype='string' name='Prefered Source Control: write-in' ordinal='203' />
            <column datatype='string' name='Why use Stack Overflow: Help for job' ordinal='204' />
            <column datatype='string' name='Why use Stack Overflow: To give help' ordinal='205' />
            <column datatype='string' name='Why use Stack Overflow: Can&apos;t do job without it' ordinal='206' />
            <column datatype='string' name='Why use Stack Overflow: Maintain online presence' ordinal='207' />
            <column datatype='string' name='Why use Stack Overflow: Demonstrate expertise' ordinal='208' />
            <column datatype='string' name='Why use Stack Overflow: Communicate with others' ordinal='209' />
            <column datatype='string' name='Why use Stack Overflow: Receive help on personal projects' ordinal='210' />
            <column datatype='string' name='Why use Stack Overflow: Love to learn' ordinal='211' />
            <column datatype='string' name='Why use Stack Overflow: I don&apos;t use Stack Overflow' ordinal='212' />
            <column datatype='string' name='How often are Stack Overflow&apos;s answers helpful' ordinal='213' />
            <column datatype='string' name='Why answer: Help a programmer in need' ordinal='214' />
            <column datatype='string' name='Why answer: Help future programmers' ordinal='215' />
            <column datatype='string' name='Why answer: Demonstrate expertise' ordinal='216' />
            <column datatype='string' name='Why answer: Self promotion' ordinal='217' />
            <column datatype='string' name='Why answer: Sense of responsibility to developers' ordinal='218' />
            <column datatype='string' name='Why answer: No idea' ordinal='219' />
            <column datatype='string' name='Why answer: I don&apos;t answer and I don&apos;t want to' ordinal='220' />
            <column datatype='string' name='Why answer: I don&apos;t answer but I want to' ordinal='221' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tabs or Spaces</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Tabs or Spaces]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Tabs or Spaces</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Years IT / Programming Experience</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Years IT / Programming Experience]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Years IT / Programming Experience</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occupation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Occupation]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Occupation</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Desktop Operating System</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Desktop Operating System]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Desktop Operating System</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Desktop Operating System: write-in</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Desktop Operating System: write-in]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Desktop Operating System: write-in</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Android</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Android]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Android</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Arduino</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Arduino]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Arduino</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: AngularJS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: AngularJS]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: AngularJS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: C</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: C]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: C</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: C++</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: C++]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: C++</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: C++11</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: C++11]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: C++11</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: C#</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: C#]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: C#</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Cassandra</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Cassandra]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Cassandra</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: CoffeeScript</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: CoffeeScript]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: CoffeeScript</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Cordova</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Cordova]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Cordova</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Clojure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Clojure]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Clojure</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Cloud</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Cloud]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Cloud</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Dart</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Dart]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Dart</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: F#</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: F#]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: F#</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Go</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Go]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Go</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Hadoop</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Hadoop]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Hadoop</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Haskell</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Haskell]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Haskell</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: iOS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: iOS]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: iOS</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Java</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Java]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Java</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: JavaScript</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: JavaScript]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: JavaScript</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: LAMP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: LAMP]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: LAMP</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Matlab</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Matlab]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Matlab</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: MongoDB</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: MongoDB]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: MongoDB</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Node.js</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Node.js]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Node.js</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Objective-C</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Objective-C]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Objective-C</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Perl</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Perl]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Perl</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: PHP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: PHP]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: PHP</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Python</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Python]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Python</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: R</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: R]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: R</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Redis</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Redis]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Redis</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Ruby</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Ruby]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Ruby</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Rust</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Rust]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Rust</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Salesforce</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Salesforce]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Salesforce</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Scala</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Scala]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Scala</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Sharepoint</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Sharepoint]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Sharepoint</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Spark</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Spark]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Spark</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: SQL</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: SQL]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: SQL</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: SQL Server</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: SQL Server]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: SQL Server</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Swift</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Swift]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Swift</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Visual Basic</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Visual Basic]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Visual Basic</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Windows Phone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Windows Phone]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Windows Phone</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Wordpress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Wordpress]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Wordpress</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Lang &amp; Tech: Write-In</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Current Lang &amp; Tech: Write-In]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Current Lang &amp; Tech: Write-In</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Android</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Android]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Android</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Arduino</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Arduino]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Arduino</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: AngularJS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: AngularJS]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: AngularJS</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: C</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: C]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: C</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: C++</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: C++]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: C++</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: C++11</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: C++11]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: C++11</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: C#</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: C#]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: C#</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Cassandra</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Cassandra]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Cassandra</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: CoffeeScript</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: CoffeeScript]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: CoffeeScript</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Cordova</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Cordova]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Cordova</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Clojure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Clojure]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Clojure</remote-alias>
            <ordinal>61</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Cloud</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Cloud]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Cloud</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Dart</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Dart]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Dart</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: F#</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: F#]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: F#</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Go</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Go]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Go</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Hadoop</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Hadoop]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Hadoop</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Haskell</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Haskell]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Haskell</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: iOS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: iOS]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: iOS</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Java</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Java]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Java</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: JavaScript</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: JavaScript]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: JavaScript</remote-alias>
            <ordinal>70</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: LAMP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: LAMP]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: LAMP</remote-alias>
            <ordinal>71</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Matlab</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Matlab]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Matlab</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: MongoDB</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: MongoDB]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: MongoDB</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Node.js</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Node.js]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Node.js</remote-alias>
            <ordinal>74</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Objective-C</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Objective-C]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Objective-C</remote-alias>
            <ordinal>75</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Perl</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Perl]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Perl</remote-alias>
            <ordinal>76</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: PHP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: PHP]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: PHP</remote-alias>
            <ordinal>77</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Python</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Python]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Python</remote-alias>
            <ordinal>78</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: R</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: R]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: R</remote-alias>
            <ordinal>79</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Redis</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Redis]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Redis</remote-alias>
            <ordinal>80</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Ruby</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Ruby]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Ruby</remote-alias>
            <ordinal>81</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Rust</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Rust]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Rust</remote-alias>
            <ordinal>82</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Salesforce</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Salesforce]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Salesforce</remote-alias>
            <ordinal>83</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Scala</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Scala]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Scala</remote-alias>
            <ordinal>84</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Sharepoint</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Sharepoint]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Sharepoint</remote-alias>
            <ordinal>85</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Spark</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Spark]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Spark</remote-alias>
            <ordinal>86</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: SQL</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: SQL]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: SQL</remote-alias>
            <ordinal>87</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: SQL Server</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: SQL Server]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: SQL Server</remote-alias>
            <ordinal>88</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Swift</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Swift]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Swift</remote-alias>
            <ordinal>89</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Visual Basic</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Visual Basic]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Visual Basic</remote-alias>
            <ordinal>90</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Windows Phone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Windows Phone]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Windows Phone</remote-alias>
            <ordinal>91</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Wordpress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Wordpress]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Wordpress</remote-alias>
            <ordinal>92</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Lang &amp; Tech: Write-In</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Future Lang &amp; Tech: Write-In]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Future Lang &amp; Tech: Write-In</remote-alias>
            <ordinal>93</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Training &amp; Education: No formal training</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Training &amp; Education: No formal training]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Training &amp; Education: No formal training</remote-alias>
            <ordinal>94</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Training &amp; Education: On the job</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Training &amp; Education: On the job]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Training &amp; Education: On the job</remote-alias>
            <ordinal>95</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Training &amp; Education: Boot camp or night school</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Training &amp; Education: Boot camp or night school]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Training &amp; Education: Boot camp or night school</remote-alias>
            <ordinal>96</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Training &amp; Education: Online Class</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Training &amp; Education: Online Class]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Training &amp; Education: Online Class</remote-alias>
            <ordinal>97</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Training &amp; Education: Mentorship</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Training &amp; Education: Mentorship]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Training &amp; Education: Mentorship</remote-alias>
            <ordinal>98</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Training &amp; Education: Industry certification</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Training &amp; Education: Industry certification]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Training &amp; Education: Industry certification</remote-alias>
            <ordinal>99</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Training &amp; Education: Some college, but no CS degree</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Training &amp; Education: Some college, but no CS degree]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Training &amp; Education: Some college, but no CS degree</remote-alias>
            <ordinal>100</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Training &amp; Education: BS in CS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Training &amp; Education: BS in CS]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Training &amp; Education: BS in CS</remote-alias>
            <ordinal>101</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Training &amp; Education: Masters in CS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Training &amp; Education: Masters in CS]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Training &amp; Education: Masters in CS</remote-alias>
            <ordinal>102</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Training &amp; Education: PhD in CS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Training &amp; Education: PhD in CS]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Training &amp; Education: PhD in CS</remote-alias>
            <ordinal>103</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Training &amp; Education: Other</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Training &amp; Education: Other]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Training &amp; Education: Other</remote-alias>
            <ordinal>104</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Compensation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Compensation]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Compensation</remote-alias>
            <ordinal>105</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Compensation: midpoint</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Compensation: midpoint]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Compensation: midpoint</remote-alias>
            <ordinal>106</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Employment Status]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Employment Status</remote-alias>
            <ordinal>107</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>108</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Job Satisfaction</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Job Satisfaction]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Job Satisfaction</remote-alias>
            <ordinal>109</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purchasing Power</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Purchasing Power]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Purchasing Power</remote-alias>
            <ordinal>110</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Remote Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Remote Status]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Remote Status</remote-alias>
            <ordinal>111</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Changed Jobs in last 12 Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Changed Jobs in last 12 Months]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Changed Jobs in last 12 Months</remote-alias>
            <ordinal>112</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open to new job opportunities</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Open to new job opportunities]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Open to new job opportunities</remote-alias>
            <ordinal>113</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Salary</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Salary]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Salary</remote-alias>
            <ordinal>114</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Equity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Equity]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Equity</remote-alias>
            <ordinal>115</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Important decisions</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Important decisions]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Important decisions</remote-alias>
            <ordinal>116</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Health insurance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Health insurance]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Health insurance</remote-alias>
            <ordinal>117</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Industry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Industry]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Industry</remote-alias>
            <ordinal>118</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Tech stack</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Tech stack]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Tech stack</remote-alias>
            <ordinal>119</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Company size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Company size]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Company size</remote-alias>
            <ordinal>120</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Company stage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Company stage]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Company stage</remote-alias>
            <ordinal>121</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Work - Life balance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Work - Life balance]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Work - Life balance</remote-alias>
            <ordinal>122</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Advancement</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Advancement]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Advancement</remote-alias>
            <ordinal>123</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Job title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Job title]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Job title</remote-alias>
            <ordinal>124</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Office location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Office location]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Office location</remote-alias>
            <ordinal>125</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Quality of colleagues</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Quality of colleagues]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Quality of colleagues</remote-alias>
            <ordinal>126</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Company culture</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Company culture]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Company culture</remote-alias>
            <ordinal>127</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Company reputation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Company reputation]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Company reputation</remote-alias>
            <ordinal>128</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Building something that matters</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Building something that matters]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Building something that matters</remote-alias>
            <ordinal>129</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Remote working</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Remote working]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Remote working</remote-alias>
            <ordinal>130</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most important aspect of new job opportunity: Flexible work options</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most important aspect of new job opportunity: Flexible work options]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most important aspect of new job opportunity: Flexible work options</remote-alias>
            <ordinal>131</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How important is remote when evaluating new job opportunity?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[How important is remote when evaluating new job opportunity?]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>How important is remote when evaluating new job opportunity?</remote-alias>
            <ordinal>132</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most annoying about job search: Finding time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most annoying about job search: Finding time]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most annoying about job search: Finding time</remote-alias>
            <ordinal>133</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most annoying about job search: Finding job I&apos;m qualified for</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most annoying about job search: Finding job I&apos;m qualified for]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most annoying about job search: Finding job I&apos;m qualified for</remote-alias>
            <ordinal>134</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most annoying about job search: Finding interesting job</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most annoying about job search: Finding interesting job]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most annoying about job search: Finding interesting job</remote-alias>
            <ordinal>135</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most annoying about job search: Interesting companies rarely respond</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most annoying about job search: Interesting companies rarely respond]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most annoying about job search: Interesting companies rarely respond</remote-alias>
            <ordinal>136</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most annoying about job search: Writing and updating CV</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most annoying about job search: Writing and updating CV]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most annoying about job search: Writing and updating CV</remote-alias>
            <ordinal>137</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most annoying about job search: Taking time off work to interview</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most annoying about job search: Taking time off work to interview]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most annoying about job search: Taking time off work to interview</remote-alias>
            <ordinal>138</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most annoying about job search: The Interview</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most annoying about job search: The Interview]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most annoying about job search: The Interview</remote-alias>
            <ordinal>139</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How often contacted by recruiters</remote-name>
            <remote-type>130</remote-type>
            <local-name>[How often contacted by recruiters]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>How often contacted by recruiters</remote-alias>
            <ordinal>140</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perception of recruiter contact</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Perception of recruiter contact]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Perception of recruiter contact</remote-alias>
            <ordinal>141</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perception of contact form: Email</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Perception of contact form: Email]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Perception of contact form: Email</remote-alias>
            <ordinal>142</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perception of contact form: LinkedIn</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Perception of contact form: LinkedIn]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Perception of contact form: LinkedIn</remote-alias>
            <ordinal>143</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perception of contact form: Xing</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Perception of contact form: Xing]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Perception of contact form: Xing</remote-alias>
            <ordinal>144</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perception of contact form: Phone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Perception of contact form: Phone]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Perception of contact form: Phone</remote-alias>
            <ordinal>145</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perception of contact form: Stack Overflow Careers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Perception of contact form: Stack Overflow Careers]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Perception of contact form: Stack Overflow Careers</remote-alias>
            <ordinal>146</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perception of contact form: Twitter</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Perception of contact form: Twitter]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Perception of contact form: Twitter</remote-alias>
            <ordinal>147</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perception of contact form: Facebook</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Perception of contact form: Facebook]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Perception of contact form: Facebook</remote-alias>
            <ordinal>148</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Appealing message traits: Message is personalized</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Appealing message traits: Message is personalized]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Appealing message traits: Message is personalized</remote-alias>
            <ordinal>149</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Appealing message traits: Code or projects mentioned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Appealing message traits: Code or projects mentioned]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Appealing message traits: Code or projects mentioned</remote-alias>
            <ordinal>150</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Appealing message traits: Stack Overflow activity mentioned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Appealing message traits: Stack Overflow activity mentioned]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Appealing message traits: Stack Overflow activity mentioned</remote-alias>
            <ordinal>151</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Appealing message traits: Team described</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Appealing message traits: Team described]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Appealing message traits: Team described</remote-alias>
            <ordinal>152</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Appealing message traits: Company culture described</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Appealing message traits: Company culture described]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Appealing message traits: Company culture described</remote-alias>
            <ordinal>153</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Appealing message traits: Salary information</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Appealing message traits: Salary information]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Appealing message traits: Salary information</remote-alias>
            <ordinal>154</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Appealing message traits: Benefits &amp; Perks</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Appealing message traits: Benefits &amp; Perks]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Appealing message traits: Benefits &amp; Perks</remote-alias>
            <ordinal>155</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Appealing message traits: Stack Overflow Company Page</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Appealing message traits: Stack Overflow Company Page]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Appealing message traits: Stack Overflow Company Page</remote-alias>
            <ordinal>156</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most urgent info about job opportunity: Salary</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most urgent info about job opportunity: Salary]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most urgent info about job opportunity: Salary</remote-alias>
            <ordinal>157</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most urgent info about job opportunity: Benefits</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most urgent info about job opportunity: Benefits]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most urgent info about job opportunity: Benefits</remote-alias>
            <ordinal>158</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most urgent info about job opportunity: Company name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most urgent info about job opportunity: Company name]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most urgent info about job opportunity: Company name</remote-alias>
            <ordinal>159</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most urgent info about job opportunity: Tech stack</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most urgent info about job opportunity: Tech stack]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most urgent info about job opportunity: Tech stack</remote-alias>
            <ordinal>160</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most urgent info about job opportunity: Office location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most urgent info about job opportunity: Office location]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most urgent info about job opportunity: Office location</remote-alias>
            <ordinal>161</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most urgent info about job opportunity: Job title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most urgent info about job opportunity: Job title]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most urgent info about job opportunity: Job title</remote-alias>
            <ordinal>162</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most urgent info about job opportunity: Colleagues</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most urgent info about job opportunity: Colleagues]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most urgent info about job opportunity: Colleagues</remote-alias>
            <ordinal>163</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most urgent info about job opportunity: Product details</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Most urgent info about job opportunity: Product details]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Most urgent info about job opportunity: Product details</remote-alias>
            <ordinal>164</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Who do you want to communicate with about a new job opportunity: Headhunter</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Who do you want to communicate with about a new job opportunity: Headhunter]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Who do you want to communicate with about a new job opportunity: Headhunter</remote-alias>
            <ordinal>165</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Who do you want to communicate with about a new job opportunity: In-house recruiter</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Who do you want to communicate with about a new job opportunity: In-house recruiter]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Who do you want to communicate with about a new job opportunity: In-house recruiter</remote-alias>
            <ordinal>166</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Who do you want to communicate with about a new job opportunity: In-house tech recruiter</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Who do you want to communicate with about a new job opportunity: In-house tech recruiter]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Who do you want to communicate with about a new job opportunity: In-house tech recruiter</remote-alias>
            <ordinal>167</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Who do you want to communicate with about a new job opportunity: Manager</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Who do you want to communicate with about a new job opportunity: Manager]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Who do you want to communicate with about a new job opportunity: Manager</remote-alias>
            <ordinal>168</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Who do you want to communicate with about a new job opportunity: Developer</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Who do you want to communicate with about a new job opportunity: Developer]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Who do you want to communicate with about a new job opportunity: Developer</remote-alias>
            <ordinal>169</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How can companies improve interview process: More live code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[How can companies improve interview process: More live code]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>How can companies improve interview process: More live code</remote-alias>
            <ordinal>170</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How can companies improve interview process: Flexible interview schedule</remote-name>
            <remote-type>130</remote-type>
            <local-name>[How can companies improve interview process: Flexible interview schedule]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>How can companies improve interview process: Flexible interview schedule</remote-alias>
            <ordinal>171</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How can companies improve interview process: Remote interviews</remote-name>
            <remote-type>130</remote-type>
            <local-name>[How can companies improve interview process: Remote interviews]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>How can companies improve interview process: Remote interviews</remote-alias>
            <ordinal>172</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How can companies improve interview process: Introduce me to boss</remote-name>
            <remote-type>130</remote-type>
            <local-name>[How can companies improve interview process: Introduce me to boss]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>How can companies improve interview process: Introduce me to boss</remote-alias>
            <ordinal>173</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How can companies improve interview process: Introduce me to team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[How can companies improve interview process: Introduce me to team]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>How can companies improve interview process: Introduce me to team</remote-alias>
            <ordinal>174</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How can companies improve interview process: Gimme coffee</remote-name>
            <remote-type>130</remote-type>
            <local-name>[How can companies improve interview process: Gimme coffee]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>How can companies improve interview process: Gimme coffee</remote-alias>
            <ordinal>175</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How can companies improve interview process: Show me workplace</remote-name>
            <remote-type>130</remote-type>
            <local-name>[How can companies improve interview process: Show me workplace]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>How can companies improve interview process: Show me workplace</remote-alias>
            <ordinal>176</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How can companies improve interview process: Fewer brainteasers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[How can companies improve interview process: Fewer brainteasers]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>How can companies improve interview process: Fewer brainteasers</remote-alias>
            <ordinal>177</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How can companies improve interview process: Better preparation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[How can companies improve interview process: Better preparation]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>How can companies improve interview process: Better preparation</remote-alias>
            <ordinal>178</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why try Stack Overflow Careers: No spam</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why try Stack Overflow Careers: No spam]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why try Stack Overflow Careers: No spam</remote-alias>
            <ordinal>179</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why try Stack Overflow Careers: Jobs site for programmers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why try Stack Overflow Careers: Jobs site for programmers]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why try Stack Overflow Careers: Jobs site for programmers</remote-alias>
            <ordinal>180</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why try Stack Overflow Careers: Selection of revelant jobs</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why try Stack Overflow Careers: Selection of revelant jobs]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why try Stack Overflow Careers: Selection of revelant jobs</remote-alias>
            <ordinal>181</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why try Stack Overflow Careers: Showcase Stack Overflow activity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why try Stack Overflow Careers: Showcase Stack Overflow activity]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why try Stack Overflow Careers: Showcase Stack Overflow activity</remote-alias>
            <ordinal>182</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why try Stack Overflow Careers: Jobs are on Stack Overflow</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why try Stack Overflow Careers: Jobs are on Stack Overflow]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why try Stack Overflow Careers: Jobs are on Stack Overflow</remote-alias>
            <ordinal>183</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why try Stack Overflow Careers: Other</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why try Stack Overflow Careers: Other]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why try Stack Overflow Careers: Other</remote-alias>
            <ordinal>184</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How many caffeinated beverages per day?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[How many caffeinated beverages per day?]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>How many caffeinated beverages per day?</remote-alias>
            <ordinal>185</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How many hours programming as hobby per week?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[How many hours programming as hobby per week?]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>How many hours programming as hobby per week?</remote-alias>
            <ordinal>186</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How frequently land on or read Stack Overflow</remote-name>
            <remote-type>130</remote-type>
            <local-name>[How frequently land on or read Stack Overflow]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>How frequently land on or read Stack Overflow</remote-alias>
            <ordinal>187</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Preferred text editor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Preferred text editor]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Preferred text editor</remote-alias>
            <ordinal>188</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Preferred text editor: write-in</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Preferred text editor: write-in]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Preferred text editor: write-in</remote-alias>
            <ordinal>189</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prefered IDE theme</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Prefered IDE theme]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Prefered IDE theme</remote-alias>
            <ordinal>190</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source control used: Git</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source control used: Git]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Source control used: Git</remote-alias>
            <ordinal>191</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source control used: Mercurial</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source control used: Mercurial]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Source control used: Mercurial</remote-alias>
            <ordinal>192</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source control used: SVN</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source control used: SVN]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Source control used: SVN</remote-alias>
            <ordinal>193</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source control used: CVS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source control used: CVS]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Source control used: CVS</remote-alias>
            <ordinal>194</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source control used: Perforce</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source control used: Perforce]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Source control used: Perforce</remote-alias>
            <ordinal>195</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source control used: TFS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source control used: TFS]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Source control used: TFS</remote-alias>
            <ordinal>196</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source control used: DCVS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source control used: DCVS]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Source control used: DCVS</remote-alias>
            <ordinal>197</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source control used: Bitkeeper</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source control used: Bitkeeper]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Source control used: Bitkeeper</remote-alias>
            <ordinal>198</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source control used: Legacy / Custom</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source control used: Legacy / Custom]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Source control used: Legacy / Custom</remote-alias>
            <ordinal>199</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source control used: I don&apos;t use source control</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source control used: I don&apos;t use source control]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Source control used: I don&apos;t use source control</remote-alias>
            <ordinal>200</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source control used: write-in</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source control used: write-in]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Source control used: write-in</remote-alias>
            <ordinal>201</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prefered Source Control</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Prefered Source Control]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Prefered Source Control</remote-alias>
            <ordinal>202</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prefered Source Control: write-in</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Prefered Source Control: write-in]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Prefered Source Control: write-in</remote-alias>
            <ordinal>203</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why use Stack Overflow: Help for job</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why use Stack Overflow: Help for job]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why use Stack Overflow: Help for job</remote-alias>
            <ordinal>204</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why use Stack Overflow: To give help</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why use Stack Overflow: To give help]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why use Stack Overflow: To give help</remote-alias>
            <ordinal>205</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why use Stack Overflow: Can&apos;t do job without it</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why use Stack Overflow: Can&apos;t do job without it]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why use Stack Overflow: Can&apos;t do job without it</remote-alias>
            <ordinal>206</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why use Stack Overflow: Maintain online presence</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why use Stack Overflow: Maintain online presence]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why use Stack Overflow: Maintain online presence</remote-alias>
            <ordinal>207</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why use Stack Overflow: Demonstrate expertise</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why use Stack Overflow: Demonstrate expertise]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why use Stack Overflow: Demonstrate expertise</remote-alias>
            <ordinal>208</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why use Stack Overflow: Communicate with others</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why use Stack Overflow: Communicate with others]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why use Stack Overflow: Communicate with others</remote-alias>
            <ordinal>209</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why use Stack Overflow: Receive help on personal projects</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why use Stack Overflow: Receive help on personal projects]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why use Stack Overflow: Receive help on personal projects</remote-alias>
            <ordinal>210</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why use Stack Overflow: Love to learn</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why use Stack Overflow: Love to learn]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why use Stack Overflow: Love to learn</remote-alias>
            <ordinal>211</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why use Stack Overflow: I don&apos;t use Stack Overflow</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why use Stack Overflow: I don&apos;t use Stack Overflow]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why use Stack Overflow: I don&apos;t use Stack Overflow</remote-alias>
            <ordinal>212</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How often are Stack Overflow&apos;s answers helpful</remote-name>
            <remote-type>130</remote-type>
            <local-name>[How often are Stack Overflow&apos;s answers helpful]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>How often are Stack Overflow&apos;s answers helpful</remote-alias>
            <ordinal>213</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why answer: Help a programmer in need</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why answer: Help a programmer in need]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why answer: Help a programmer in need</remote-alias>
            <ordinal>214</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why answer: Help future programmers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why answer: Help future programmers]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why answer: Help future programmers</remote-alias>
            <ordinal>215</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why answer: Demonstrate expertise</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why answer: Demonstrate expertise]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why answer: Demonstrate expertise</remote-alias>
            <ordinal>216</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why answer: Self promotion</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why answer: Self promotion]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why answer: Self promotion</remote-alias>
            <ordinal>217</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why answer: Sense of responsibility to developers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why answer: Sense of responsibility to developers]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why answer: Sense of responsibility to developers</remote-alias>
            <ordinal>218</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why answer: No idea</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why answer: No idea]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why answer: No idea</remote-alias>
            <ordinal>219</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why answer: I don&apos;t answer and I don&apos;t want to</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why answer: I don&apos;t answer and I don&apos;t want to]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why answer: I don&apos;t answer and I don&apos;t want to</remote-alias>
            <ordinal>220</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Why answer: I don&apos;t answer but I want to</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Why answer: I don&apos;t answer but I want to]</local-name>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias>Why answer: I don&apos;t answer but I want to</remote-alias>
            <ordinal>221</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2015 Stack Overflow Developer S]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:HN10001:no:A1:HN2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% of total employees' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Records]) / TOTAL(SUM([Number of Records]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='CountD' datatype='integer' name='[Compensation: midpoint]' role='measure' type='quantitative' />
      <column datatype='string' name='[Compensation]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
      <column datatype='string' name='[Job Satisfaction]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;I hate my job&quot;' value='Hate' />
          <alias key='&quot;I love my job&quot;' value='Love' />
          <alias key='&quot;I&apos;m neither satisfied nor dissatisfied with my job&quot;' value='Neutral' />
          <alias key='&quot;I&apos;m somewhat dissatisfied with my job&quot;' value='Dissatisfied' />
          <alias key='&quot;I&apos;m somewhat satisfied with my job&quot;' value='Satisfied' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Occupation]' role='dimension' type='nominal' />
      <column datatype='string' name='[Years IT / Programming Experience]' role='dimension' type='nominal' />
      <column-instance column='[Compensation]' derivation='None' name='[none:Compensation:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
      <column-instance column='[Job Satisfaction]' derivation='None' name='[none:Job Satisfaction:nk]' pivot='key' type='nominal' />
      <column-instance column='[Occupation]' derivation='None' name='[none:Occupation:nk]' pivot='key' type='nominal' />
      <column-instance column='[Years IT / Programming Experience]' derivation='None' name='[none:Years IT / Programming Experience:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Compensation,Country)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Compensation:nk]' />
          <groupfilter function='level-members' level='[none:Country:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Country,Gender)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:Gender:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.726681' measure-ordering='alphabetic' measure-percentage='0.273319' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Compensation:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Less than $20,000&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;$80,000 - $100,000&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;More than $160,000&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;$100,000 - $120,000&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;$20,000 - $40,000&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;$120,000 - $140,000&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rather not say&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;$140,000 - $160,000&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;$40,000 - $60,000&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Unemployed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;$60,000 - $80,000&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Occupation:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Embedded application developer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Database administrator&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Machine learning developer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Desktop developer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Executive (VP of Eng., CTO, CIO, etc.)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Enterprise level services developer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Front-end web developer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Quality Assurance&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Full-stack web developer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Business intelligence or data warehousing expert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile developer - Android&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mobile developer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;System administrator&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Graphics programmer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Designer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Product manager&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Developer with a statistics or mathematics background&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mobile developer - iOS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Growth hacker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Student&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DevOps&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Data scientist&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Back-end web developer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mobile developer - Windows Phone&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bosnia Herzegovina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad &amp; Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo {Democratic Rep}&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua &amp; Deps&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burkina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar, {Burma}&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Korea North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland {Republic}&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;N/A&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Korea South&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prefer not to disclose&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Job Satisfaction:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;I hate my job&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;I love my job&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;I&apos;m somewhat satisfied with my job&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;I&apos;m neither satisfied nor dissatisfied with my job&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Other (please specify)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;I&apos;m somewhat dissatisfied with my job&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Industry:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Government&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aerospace&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Healthcare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Finance / Banking&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Web Services&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Consulting&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Software Products&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Foundation / Non-Profit&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Media / Advertising&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Other (please specify)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Telecommunications&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Not Currently Employed&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;I&apos;m a student&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gaming&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Consumer Products&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Retail&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Internet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Defense&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Years IT / Programming Experience:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11+ years&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;6 - 10 years&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2 - 5 years&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Less than 1 year&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 - 2 years&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Trends Technology (2015 Stack Overflow Developer Survey Responses Working Copy)' inline='true' name='federated.1v2slrw03al7bz174xbcy1h0kzd5' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2015 Stack Overflow Developer Survey Responses Working Copy' name='excel-direct.1kfq5s30rcybmt1askz900su4i8w'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\Saurabh\Desktop\Project Docs\2015 Stack Overflow Developer Survey Responses Working Copy.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1kfq5s30rcybmt1askz900su4i8w' name='Trends Technology' table='[&apos;Trends Technology$&apos;]' type='table'>
          <columns gridOrigin='A1:C44:no:A1:C44:0' header='yes' outcome='6'>
            <column datatype='string' name='Technology' ordinal='0' />
            <column datatype='integer' name='Current Ppl Number' ordinal='1' />
            <column datatype='integer' name='Future Ppl Number' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Technology</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Technology]</local-name>
            <parent-name>[Trends Technology]</parent-name>
            <remote-alias>Technology</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Ppl Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Current Ppl Number]</local-name>
            <parent-name>[Trends Technology]</parent-name>
            <remote-alias>Current Ppl Number</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Future Ppl Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Future Ppl Number]</local-name>
            <parent-name>[Trends Technology]</parent-name>
            <remote-alias>Future Ppl Number</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Trends Technology]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C44:no:A1:C44:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Current' datatype='integer' name='[Current Ppl Number]' role='measure' type='quantitative' />
      <column caption='Future' datatype='integer' name='[Future Ppl Number]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Technology]' role='dimension' type='nominal' />
      <column-instance column='[Technology]' derivation='None' name='[none:Technology:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.459924' measure-ordering='alphabetic' measure-percentage='0.540076' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:Technology:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot; iOS&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot; Matlab&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot; PHP&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot; Sharepoint&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot; Dart&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot; JavaScript&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot; Node.js&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot; Visual Basic&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot; Windows Phone&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot; CoffeeScript&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot; Hadoop&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot; LAMP&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot; Python&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot; Clojure&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot; R&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot; Ruby&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot; SQL Server&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot; Android&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot; F\#&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot; MongoDB&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot; Perl&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot; Cloud&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot; Go&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot; Java&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot; Rust&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot; Write-In&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot; C&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot; Cordova&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot; Objective-C&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot; Salesforce&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot; AngularJS&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot; Arduino&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot; Scala&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot; Spark&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot; SQL&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot; C\#&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot; Haskell&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot; Redis&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot; Wordpress&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot; C++&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot; C++11&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot; Cassandra&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot; Swift&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Technology:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot; Android&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot; Perl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot; Dart&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot; JavaScript&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot; Visual Basic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot; Matlab&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot; PHP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot; Go&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot; Write-In&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot; C&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot; Cordova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot; CoffeeScript&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot; Python&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot; F\#&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot; MongoDB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot; Arduino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot; Spark&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot; SQL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot; C++11&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot; Cassandra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot; C++&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot; Swift&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot; Haskell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot; Wordpress&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot; iOS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot; Sharepoint&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot; Clojure&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot; Ruby&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot; Objective-C&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot; Salesforce&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot; Node.js&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot; Windows Phone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot; R&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot; SQL Server&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot; Cloud&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot; Java&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot; Rust&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot; Hadoop&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot; LAMP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot; AngularJS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot; Scala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot; C\#&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot; Redis&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Best country for my Occupation'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true'>Æ&#10;</run>
            <run bold='true' underline='true'>INSIGHTS</run>
            <run bold='true'>Æ&#10;</run>
            <run>&#10;Which country should you choose to get best rewards of your occupation?</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' />
          </datasources>
          <datasource-dependencies datasource='federated.0yc4xlq0c028h21c89tcr04xq2pc'>
            <column aggregation='CountD' datatype='integer' name='[Compensation: midpoint]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Occupation]' role='dimension' type='nominal' />
            <column-instance column='[Compensation: midpoint]' derivation='Max' name='[max:Compensation: midpoint:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occupation]' derivation='None' name='[none:Occupation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' direction='DESC' using='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[max:Compensation: midpoint:qk]' />
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]'>
            <groupfilter function='member' level='[none:Occupation:nk]' member='&quot;Database administrator&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[max:Compensation: midpoint:qk]' scope='cols' value='Maximum Salary' />
            <format attr='subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[max:Compensation: midpoint:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[max:Compensation: midpoint:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</rows>
        <cols>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[max:Compensation: midpoint:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Countrywise Sex Ratio'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true'>Æ&#10;</run>
            <run bold='true' underline='true'>INSIGHTS</run>
            <run bold='true'>Æ&#10;</run>
            <run>&#10;Which country sees the most gender gap for full stack development?&#10;Is it USA?</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' />
          </datasources>
          <datasource-dependencies datasource='federated.0yc4xlq0c028h21c89tcr04xq2pc'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Occupation]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occupation]' derivation='None' name='[none:Occupation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[Exclusions (Country,Gender)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='level-members' level='[none:Gender:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Female&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua &amp; Deps&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Armenia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Azerbaijan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia Herzegovina&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brunei&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Colombia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Croatia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cyprus&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jordan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kazakhstan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea South&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lebanon&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar, {Burma}&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saudi Arabia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Taiwan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad &amp; Tobago&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uzbekistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Male&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Andorra&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua &amp; Deps&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Armenia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Azerbaijan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia Herzegovina&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brunei&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cameroon&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chile&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Colombia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Congo {Democratic Rep}&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Costa Rica&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Croatia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cuba&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cyprus&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Georgia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jordan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kazakhstan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea North&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea South&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kyrgyzstan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lebanon&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liechtenstein&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritius&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Moldova&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mongolia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar, {Burma}&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Oman&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Other&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;San Marino&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saudi Arabia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovakia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Solomon Islands&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Swaziland&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syria&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Taiwan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tajikistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad &amp; Tobago&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkmenistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uzbekistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vanuatu&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Other&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua &amp; Deps&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Croatia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kazakhstan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea North&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea South&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vatican City&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Country:nk]' />
                  <hierarchy name='[none:Gender:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;N/A&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Ireland {Republic}&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Korea South&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Macedonia&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Bosnia Herzegovina&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Myanmar, {Burma}&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Antigua &amp; Deps&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Trinidad &amp; Tobago&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Korea North&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Brunei&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Vatican City&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Congo {Democratic Rep}&quot;</bucket>
              <bucket>&quot;Burkina&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Gender:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Gender:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Gender:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Prefer not to disclose&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]'>
            <groupfilter function='member' level='[none:Occupation:nk]' member='&quot;Full-stack web developer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Gender:nk]</column>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[Exclusions (Country,Gender)]</column>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Gender:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[cnt:Number of Records:qk]</rows>
        <cols>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Countrywise Technology Distribution'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true'>Æ&#10;</run>
            <run bold='true' underline='true'>INSIGHTS</run>
            <run bold='true'>Æ&#10;</run>
            <run>&#10;Which country has most employees working for full-stack web development?&#10;US is best, UK is second, India is the third best for it.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0yc4xlq0c028h21c89tcr04xq2pc'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Occupation]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occupation]' derivation='None' name='[none:Occupation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]'>
            <groupfilter function='member' level='[none:Occupation:nk]' member='&quot;Full-stack web developer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Back-end web developer&quot;</bucket>
              <bucket>&quot;Front-end web developer&quot;</bucket>
              <bucket>&quot;Full-stack web developer&quot;</bucket>
              <bucket>&quot;Graphics programmer&quot;</bucket>
              <bucket>&quot;Business intelligence or data warehousing expert&quot;</bucket>
              <bucket>&quot;Data scientist&quot;</bucket>
              <bucket>&quot;Database administrator&quot;</bucket>
              <bucket>&quot;Designer&quot;</bucket>
              <bucket>&quot;Desktop developer&quot;</bucket>
              <bucket>&quot;Developer with a statistics or mathematics background&quot;</bucket>
              <bucket>&quot;DevOps&quot;</bucket>
              <bucket>&quot;Embedded application developer&quot;</bucket>
              <bucket>&quot;Enterprise level services developer&quot;</bucket>
              <bucket>&quot;Executive (VP of Eng., CTO, CIO, etc.)&quot;</bucket>
              <bucket>&quot;Growth hacker&quot;</bucket>
              <bucket>&quot;Machine learning developer&quot;</bucket>
              <bucket>&quot;Mobile developer&quot;</bucket>
              <bucket>&quot;Mobile developer - Android&quot;</bucket>
              <bucket>&quot;Mobile developer - iOS&quot;</bucket>
              <bucket>&quot;Mobile developer - Windows Phone&quot;</bucket>
              <bucket>&quot;Product manager&quot;</bucket>
              <bucket>&quot;Quality Assurance&quot;</bucket>
              <bucket>&quot;Student&quot;</bucket>
              <bucket>&quot;System administrator&quot;</bucket>
              <bucket>%null%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[Longitude (generated)]' field-type='quantitative' max='21884723.00096257' min='-19028782.649853718' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[Latitude (generated)]' field-type='quantitative' max='17282182.143101994' min='-7343220.7182530239' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='250' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[cnt:Number of Records:qk]' max='500' min='1' num-steps='50' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[cnt:Number of Records:qk]' />
              <lod column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' />
              <geometry column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk] * [federated.0yc4xlq0c028h21c89tcr04xq2pc].[Latitude (generated)])</rows>
        <cols>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Exp, salary and industry'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true'>Æ&#10;</run>
            <run bold='true' underline='true'>INSIGHTS</run>
            <run bold='true'>Æ&#10;</run>
            <run>&#10;How Salary grows for your job role over the years?&#10;Software Products almost doubles every year.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' />
          </datasources>
          <datasource-dependencies datasource='federated.0yc4xlq0c028h21c89tcr04xq2pc'>
            <column aggregation='CountD' datatype='integer' name='[Compensation: midpoint]' role='measure' type='quantitative' />
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column datatype='string' name='[Years IT / Programming Experience]' role='dimension' type='nominal' />
            <column-instance column='[Compensation: midpoint]' derivation='Avg' name='[avg:Compensation: midpoint:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Years IT / Programming Experience]' derivation='None' name='[none:Years IT / Programming Experience:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Industry:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Industry:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Industry:nk]' member='&quot;Other (please specify)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]' direction='DESC' using='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]'>
            <groupfilter function='member' level='[none:Years IT / Programming Experience:nk]' member='%null%' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Years IT / Programming Experience:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Years IT / Programming Experience:nk]' />
              <groupfilter function='member' level='[none:Years IT / Programming Experience:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Years IT / Programming Experience:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than 1 year&quot;</bucket>
              <bucket>&quot;1 - 2 years&quot;</bucket>
              <bucket>&quot;2 - 5 years&quot;</bucket>
              <bucket>&quot;6 - 10 years&quot;</bucket>
              <bucket>&quot;11+ years&quot;</bucket>
              <bucket>%null%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Years IT / Programming Experience:nk]</column>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' scope='cols' value='Avg Salary' />
            <format attr='subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Years IT / Programming Experience:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]</rows>
        <cols>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Experience vs Sal Industry-wise'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true'>Æ&#10;</run>
            <run bold='true' underline='true'>INSIGHTS</run>
            <run bold='true'>Æ&#10;</run>
            <run>&#10;How Salary grows for your job role over the years?&#10;Software Products almost doubles every year.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' />
          </datasources>
          <datasource-dependencies datasource='federated.0yc4xlq0c028h21c89tcr04xq2pc'>
            <column aggregation='CountD' datatype='integer' name='[Compensation: midpoint]' role='measure' type='quantitative' />
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column datatype='string' name='[Years IT / Programming Experience]' role='dimension' type='nominal' />
            <column-instance column='[Compensation: midpoint]' derivation='Avg' name='[avg:Compensation: midpoint:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Years IT / Programming Experience]' derivation='None' name='[none:Years IT / Programming Experience:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Industry:nk]' />
              <groupfilter function='member' level='[none:Industry:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]' direction='DESC' using='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]'>
            <groupfilter function='member' level='[none:Years IT / Programming Experience:nk]' member='%null%' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Years IT / Programming Experience:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Years IT / Programming Experience:nk]' />
              <groupfilter function='member' level='[none:Years IT / Programming Experience:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Years IT / Programming Experience:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than 1 year&quot;</bucket>
              <bucket>&quot;1 - 2 years&quot;</bucket>
              <bucket>&quot;2 - 5 years&quot;</bucket>
              <bucket>&quot;6 - 10 years&quot;</bucket>
              <bucket>&quot;11+ years&quot;</bucket>
              <bucket>%null%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Years IT / Programming Experience:nk]</column>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' scope='cols' value='Avg Salary' />
            <format attr='subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='66' />
                <format attr='maxwidth' value='66' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Years IT / Programming Experience:nk]</rows>
        <cols>([federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk] * [federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Females vs Country'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true'>Æ&#10;</run>
            <run bold='true' underline='true'>INSIGHTS</run>
            <run bold='true'>Æ&#10;</run>
            <run>&#10;Which country sees the most gender gap for full stack development?&#10;Is it USA?</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0yc4xlq0c028h21c89tcr04xq2pc'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Occupation]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occupation]' derivation='None' name='[none:Occupation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[Exclusions (Country,Gender)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='level-members' level='[none:Gender:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Female&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua &amp; Deps&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Armenia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Azerbaijan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia Herzegovina&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brunei&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Colombia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Croatia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cyprus&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jordan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kazakhstan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea South&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lebanon&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar, {Burma}&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saudi Arabia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Taiwan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad &amp; Tobago&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uzbekistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Male&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Andorra&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua &amp; Deps&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Armenia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Azerbaijan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia Herzegovina&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brunei&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cameroon&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chile&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Colombia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Congo {Democratic Rep}&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Costa Rica&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Croatia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cuba&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cyprus&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Georgia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jordan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kazakhstan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea North&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea South&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kyrgyzstan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lebanon&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liechtenstein&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritius&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Moldova&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mongolia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar, {Burma}&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Oman&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Other&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;San Marino&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saudi Arabia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovakia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Solomon Islands&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Swaziland&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syria&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Taiwan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tajikistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad &amp; Tobago&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkmenistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uzbekistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vanuatu&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Other&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua &amp; Deps&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Croatia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kazakhstan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea North&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea South&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vatican City&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Country:nk]' />
                  <hierarchy name='[none:Gender:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' direction='DESC' using='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[cnt:Number of Records:qk]' />
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Gender:nk]'>
            <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Female&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]'>
            <groupfilter function='member' level='[none:Occupation:nk]' member='&quot;Full-stack web developer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[Exclusions (Country,Gender)]</column>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</column>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</rows>
        <cols>([federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Gender:nk] * [federated.0yc4xlq0c028h21c89tcr04xq2pc].[cnt:Number of Records:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Full-Stack developers Country Distribution'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='12'>&#10;In Full Stack Developers, which countries stand out in terms of #employees?</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' />
          </datasources>
          <datasource-dependencies datasource='federated.0yc4xlq0c028h21c89tcr04xq2pc'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Occupation]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occupation]' derivation='None' name='[none:Occupation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Armenia&quot;' />
                <groupfilter from='&quot;Azerbaijan&quot;' function='range' level='[none:Country:nk]' to='&quot;Belarus&quot;' />
                <groupfilter from='&quot;Benin&quot;' function='range' level='[none:Country:nk]' to='&quot;Botswana&quot;' />
                <groupfilter from='&quot;Brunei&quot;' function='range' level='[none:Country:nk]' to='&quot;Cameroon&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chile&quot;' />
                <groupfilter from='&quot;Colombia&quot;' function='range' level='[none:Country:nk]' to='&quot;Cyprus&quot;' />
                <groupfilter from='&quot;Djibouti&quot;' function='range' level='[none:Country:nk]' to='&quot;Ethiopia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Georgia&quot;' />
                <groupfilter from='&quot;Ghana&quot;' function='range' level='[none:Country:nk]' to='&quot;Iceland&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
                <groupfilter from='&quot;Iraq&quot;' function='range' level='[none:Country:nk]' to='&quot;Israel&quot;' />
                <groupfilter from='&quot;Jamaica&quot;' function='range' level='[none:Country:nk]' to='&quot;Myanmar, {Burma}&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
                <groupfilter from='&quot;New Zealand&quot;' function='range' level='[none:Country:nk]' to='&quot;Philippines&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
                <groupfilter from='&quot;Rwanda&quot;' function='range' level='[none:Country:nk]' to='&quot;South Sudan&quot;' />
                <groupfilter from='&quot;Sri Lanka&quot;' function='range' level='[none:Country:nk]' to='&quot;Swaziland&quot;' />
                <groupfilter from='&quot;Syria&quot;' function='range' level='[none:Country:nk]' to='&quot;Tunisia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkmenistan&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
                <groupfilter from='&quot;Uruguay&quot;' function='range' level='[none:Country:nk]' to='&quot;Zimbabwe&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' direction='DESC' using='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]' />
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]'>
            <groupfilter function='member' level='[none:Occupation:nk]' member='&quot;Full-stack web developer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</column>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]' scope='rows' value='Number of Employees' />
            <format attr='subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' />
              <text column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' />
              <lod column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]</rows>
        <cols>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='INDIA Salary Distribution'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true'>Æ&#10;</run>
            <run bold='true' underline='true'>INSIGHTS</run>
            <run bold='true'>Æ&#10;</run>
            <run>&#10;For a given nation, what is average range that most population is earning?</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' />
          </datasources>
          <datasource-dependencies datasource='federated.0yc4xlq0c028h21c89tcr04xq2pc'>
            <column datatype='string' name='[Compensation]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Compensation]' derivation='None' name='[none:Compensation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[Exclusions (Compensation,Country)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Compensation:nk]' />
                <groupfilter function='level-members' level='[none:Country:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Compensation:nk]' member='&quot;Rather not say&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Compensation:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Compensation:nk]' />
              <groupfilter function='member' level='[none:Compensation:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Compensation:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Unemployed&quot;</bucket>
              <bucket>&quot;Less than $20,000&quot;</bucket>
              <bucket>&quot;$20,000 - $40,000&quot;</bucket>
              <bucket>&quot;$40,000 - $60,000&quot;</bucket>
              <bucket>&quot;$60,000 - $80,000&quot;</bucket>
              <bucket>&quot;$80,000 - $100,000&quot;</bucket>
              <bucket>&quot;$100,000 - $120,000&quot;</bucket>
              <bucket>&quot;$120,000 - $140,000&quot;</bucket>
              <bucket>&quot;$140,000 - $160,000&quot;</bucket>
              <bucket>&quot;More than $160,000&quot;</bucket>
              <bucket>&quot;Rather not say&quot;</bucket>
              <bucket>%null%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</column>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Compensation:nk]</column>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[Exclusions (Compensation,Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='522' />
            <format attr='cell-h' value='522' />
            <format attr='cell' value='58' />
            <format attr='cell-q' value='290' />
            <format attr='width' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' value='642' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' value='10' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[cnt:Number of Records:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Compensation:nk]' />
              <wedge-size column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]' />
              <text column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[cnt:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='OS Popularity (2)'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='12'>&#10;Which OS is most famous amongst users of stackoverflow?</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' />
          </datasources>
          <datasource-dependencies datasource='federated.0yc4xlq0c028h21c89tcr04xq2pc'>
            <column caption='% of total employees' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Number of Records]) / TOTAL(SUM([Number of Records]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Desktop Operating System]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Desktop Operating System]' derivation='None' name='[none:Desktop Operating System:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Desktop Operating System:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Desktop Operating System:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Desktop Operating System:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Desktop Operating System:nk]' member='&quot;Ubuntu&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Desktop Operating System:nk]' direction='DESC' using='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Desktop Operating System:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[usr:Calculation1:qk]' scope='rows' value='#Employees' />
            <format attr='subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[usr:Calculation1:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[usr:Calculation1:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]' />
              <text column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[usr:Calculation1:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[usr:Calculation1:qk]</rows>
        <cols>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Desktop Operating System:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Occupation vs Industry'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true'>Æ&#10;</run>
            <run bold='true' underline='true'>INSIGHTS</run>
            <run bold='true'>Æ&#10;</run>
            <run>&#10;Given your occupation, which industry promises most job satisfaction&#10;Eg- For Data Science, ?Education Sector looks best</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' />
          </datasources>
          <datasource-dependencies datasource='federated.0yc4xlq0c028h21c89tcr04xq2pc'>
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column datatype='string' name='[Job Satisfaction]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;I hate my job&quot;' value='Hate' />
                <alias key='&quot;I love my job&quot;' value='Love' />
                <alias key='&quot;I&apos;m neither satisfied nor dissatisfied with my job&quot;' value='Neutral' />
                <alias key='&quot;I&apos;m somewhat dissatisfied with my job&quot;' value='Dissatisfied' />
                <alias key='&quot;I&apos;m somewhat satisfied with my job&quot;' value='Satisfied' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Occupation]' role='dimension' type='nominal' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Satisfaction]' derivation='None' name='[none:Job Satisfaction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occupation]' derivation='None' name='[none:Occupation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='RowInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Industry:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Industry:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Industry:nk]' member='&quot;Other (please specify)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Aerospace&quot;</bucket>
              <bucket>&quot;Consulting&quot;</bucket>
              <bucket>&quot;Consumer Products&quot;</bucket>
              <bucket>&quot;Defense&quot;</bucket>
              <bucket>&quot;Education&quot;</bucket>
              <bucket>&quot;Finance / Banking&quot;</bucket>
              <bucket>&quot;Foundation / Non-Profit&quot;</bucket>
              <bucket>&quot;Gaming&quot;</bucket>
              <bucket>&quot;Government&quot;</bucket>
              <bucket>&quot;Healthcare&quot;</bucket>
              <bucket>&quot;I&apos;m a student&quot;</bucket>
              <bucket>&quot;Internet&quot;</bucket>
              <bucket>&quot;Manufacturing&quot;</bucket>
              <bucket>&quot;Media / Advertising&quot;</bucket>
              <bucket>&quot;Not Currently Employed&quot;</bucket>
              <bucket>&quot;Other (please specify)&quot;</bucket>
              <bucket>&quot;Retail&quot;</bucket>
              <bucket>&quot;Software Products&quot;</bucket>
              <bucket>&quot;Telecommunications&quot;</bucket>
              <bucket>&quot;Web Services&quot;</bucket>
              <bucket>%null%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Job Satisfaction:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Job Satisfaction:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Job Satisfaction:nk]' member='&quot;Other (please specify)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;I hate my job&quot;</bucket>
              <bucket>&quot;I&apos;m somewhat dissatisfied with my job&quot;</bucket>
              <bucket>&quot;I&apos;m neither satisfied nor dissatisfied with my job&quot;</bucket>
              <bucket>&quot;I&apos;m somewhat satisfied with my job&quot;</bucket>
              <bucket>&quot;I love my job&quot;</bucket>
              <bucket>&quot;Other (please specify)&quot;</bucket>
              <bucket>%null%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]'>
            <groupfilter function='member' level='[none:Occupation:nk]' member='&quot;Database administrator&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Back-end web developer&quot;</bucket>
              <bucket>&quot;Business intelligence or data warehousing expert&quot;</bucket>
              <bucket>&quot;Data scientist&quot;</bucket>
              <bucket>&quot;Database administrator&quot;</bucket>
              <bucket>&quot;Designer&quot;</bucket>
              <bucket>&quot;Desktop developer&quot;</bucket>
              <bucket>&quot;Developer with a statistics or mathematics background&quot;</bucket>
              <bucket>&quot;DevOps&quot;</bucket>
              <bucket>&quot;Embedded application developer&quot;</bucket>
              <bucket>&quot;Enterprise level services developer&quot;</bucket>
              <bucket>&quot;Executive (VP of Eng., CTO, CIO, etc.)&quot;</bucket>
              <bucket>&quot;Front-end web developer&quot;</bucket>
              <bucket>&quot;Full-stack web developer&quot;</bucket>
              <bucket>&quot;Graphics programmer&quot;</bucket>
              <bucket>&quot;Growth hacker&quot;</bucket>
              <bucket>&quot;Machine learning developer&quot;</bucket>
              <bucket>&quot;Mobile developer&quot;</bucket>
              <bucket>&quot;Mobile developer - Android&quot;</bucket>
              <bucket>&quot;Mobile developer - iOS&quot;</bucket>
              <bucket>&quot;Mobile developer - Windows Phone&quot;</bucket>
              <bucket>&quot;Product manager&quot;</bucket>
              <bucket>&quot;Quality Assurance&quot;</bucket>
              <bucket>&quot;Student&quot;</bucket>
              <bucket>&quot;System administrator&quot;</bucket>
              <bucket>%null%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</column>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]</column>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[pcto:cnt:Number of Records:qk:3]' scope='rows' value='#Employees' />
            <format attr='subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[pcto:cnt:Number of Records:qk:3]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[pcto:cnt:Number of Records:qk:3]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]' />
              <tooltip column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[pcto:cnt:Number of Records:qk:3]</rows>
        <cols>([federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk] / ([federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk] / [federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Occupation vs Satisfaction'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='12'>&#10;Which occupation people hate or love?</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' />
          </datasources>
          <datasource-dependencies datasource='federated.0yc4xlq0c028h21c89tcr04xq2pc'>
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column datatype='string' name='[Job Satisfaction]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;I hate my job&quot;' value='Hate' />
                <alias key='&quot;I love my job&quot;' value='Love' />
                <alias key='&quot;I&apos;m neither satisfied nor dissatisfied with my job&quot;' value='Neutral' />
                <alias key='&quot;I&apos;m somewhat dissatisfied with my job&quot;' value='Dissatisfied' />
                <alias key='&quot;I&apos;m somewhat satisfied with my job&quot;' value='Satisfied' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Occupation]' role='dimension' type='nominal' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Satisfaction]' derivation='None' name='[none:Job Satisfaction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occupation]' derivation='None' name='[none:Occupation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='RowInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Industry:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Industry:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Industry:nk]' member='&quot;Other (please specify)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Job Satisfaction:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Job Satisfaction:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Job Satisfaction:nk]' member='&quot;Other (please specify)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;I hate my job&quot;</bucket>
              <bucket>&quot;I&apos;m somewhat dissatisfied with my job&quot;</bucket>
              <bucket>&quot;I&apos;m neither satisfied nor dissatisfied with my job&quot;</bucket>
              <bucket>&quot;I&apos;m somewhat satisfied with my job&quot;</bucket>
              <bucket>&quot;I love my job&quot;</bucket>
              <bucket>&quot;Other (please specify)&quot;</bucket>
              <bucket>%null%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Occupation:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Occupation:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Occupation:nk]' member='&quot;Executive (VP of Eng., CTO, CIO, etc.)&quot;' />
                <groupfilter function='member' level='[none:Occupation:nk]' member='&quot;Student&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]</column>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]</column>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[pcto:cnt:Number of Records:qk:3]' scope='rows' value='#Employees' />
            <format attr='subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[pcto:cnt:Number of Records:qk:3]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[pcto:cnt:Number of Records:qk:3]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]' />
              <tooltip column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[pcto:cnt:Number of Records:qk:3]</rows>
        <cols>([federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk] / [federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Occupation-wise salary'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='12'>&#10;Which occupation is fetching more salary?</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' />
          </datasources>
          <datasource-dependencies datasource='federated.0yc4xlq0c028h21c89tcr04xq2pc'>
            <column aggregation='CountD' datatype='integer' name='[Compensation: midpoint]' role='measure' type='quantitative' />
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column datatype='string' name='[Occupation]' role='dimension' type='nominal' />
            <column-instance column='[Compensation: midpoint]' derivation='Avg' name='[avg:Compensation: midpoint:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occupation]' derivation='None' name='[none:Occupation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Industry:nk]' />
              <groupfilter function='member' level='[none:Industry:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Occupation:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Occupation:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Occupation:nk]' member='&quot;Executive (VP of Eng., CTO, CIO, etc.)&quot;' />
                <groupfilter function='member' level='[none:Occupation:nk]' member='&quot;Growth hacker&quot;' />
                <groupfilter function='member' level='[none:Occupation:nk]' member='&quot;Product manager&quot;' />
                <groupfilter function='member' level='[none:Occupation:nk]' member='&quot;Student&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]' direction='DESC' using='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' />
          <slices>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]</column>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' scope='cols' value='Average Salary' />
            <format attr='subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</rows>
        <cols>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Occupationwise Candidates Distribution'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='12'>&#10;What is ocuupation of most of the users? &#10;</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' />
          </datasources>
          <datasource-dependencies datasource='federated.0yc4xlq0c028h21c89tcr04xq2pc'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Occupation]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Occupation]' derivation='None' name='[none:Occupation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Occupation:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Occupation:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Occupation:nk]' member='&quot;Student&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]' direction='DESC' using='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]' scope='cols' value='#Employees' />
            <format attr='subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[cnt:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</rows>
        <cols>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Salary vs Satisfaction'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='12'>Checks whether there is a correlation between job satisfaction and salary earned</run>
            <run fontsize='14'>.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' />
          </datasources>
          <datasource-dependencies datasource='federated.0yc4xlq0c028h21c89tcr04xq2pc'>
            <column aggregation='CountD' datatype='integer' name='[Compensation: midpoint]' role='measure' type='quantitative' />
            <column datatype='string' name='[Job Satisfaction]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;I hate my job&quot;' value='Hate' />
                <alias key='&quot;I love my job&quot;' value='Love' />
                <alias key='&quot;I&apos;m neither satisfied nor dissatisfied with my job&quot;' value='Neutral' />
                <alias key='&quot;I&apos;m somewhat dissatisfied with my job&quot;' value='Dissatisfied' />
                <alias key='&quot;I&apos;m somewhat satisfied with my job&quot;' value='Satisfied' />
              </aliases>
            </column>
            <column-instance column='[Compensation: midpoint]' derivation='Avg' name='[avg:Compensation: midpoint:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Job Satisfaction]' derivation='None' name='[none:Job Satisfaction:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Job Satisfaction:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Job Satisfaction:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Job Satisfaction:nk]' member='&quot;Other (please specify)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;I love my job&quot;</bucket>
              <bucket>&quot;I&apos;m somewhat satisfied with my job&quot;</bucket>
              <bucket>&quot;I&apos;m neither satisfied nor dissatisfied with my job&quot;</bucket>
              <bucket>&quot;I&apos;m somewhat dissatisfied with my job&quot;</bucket>
              <bucket>&quot;I hate my job&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Other (please specify)&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' scope='cols' value='Avg Salary' />
            <format attr='subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]' />
              <text column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]' />
              <color column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]&gt;</run>
                <run bold='true' fontcolor='#333333' fontsize='10'>&#10;&lt;[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Shifting Technology Trends'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Shifting Technology Trends</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true'>Æ&#10;</run>
            <run bold='true' underline='true'>INSIGHTS</run>
            <run bold='true'>Æ&#10;</run>
            <run>&#10;Which technology has the most emerging market (or seeing most growth)?&#10;Android.&#10;Can&apos;t say that Javascript&apos;s requirement is reducing.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Trends Technology (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.1v2slrw03al7bz174xbcy1h0kzd5' />
          </datasources>
          <datasource-dependencies datasource='federated.1v2slrw03al7bz174xbcy1h0kzd5'>
            <column caption='Current' datatype='integer' name='[Current Ppl Number]' role='measure' type='quantitative' />
            <column caption='Future' datatype='integer' name='[Future Ppl Number]' role='measure' type='quantitative' />
            <column datatype='string' name='[Technology]' role='dimension' type='nominal' />
            <column-instance column='[Technology]' derivation='None' name='[none:Technology:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Ppl Number]' derivation='Sum' name='[sum:Current Ppl Number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Future Ppl Number]' derivation='Sum' name='[sum:Future Ppl Number:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v2slrw03al7bz174xbcy1h0kzd5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2slrw03al7bz174xbcy1h0kzd5].[sum:Current Ppl Number:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2slrw03al7bz174xbcy1h0kzd5].[sum:Future Ppl Number:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1v2slrw03al7bz174xbcy1h0kzd5].[none:Technology:nk]' direction='DESC' using='[federated.1v2slrw03al7bz174xbcy1h0kzd5].[sum:Current Ppl Number:qk]' />
          <slices>
            <column>[federated.1v2slrw03al7bz174xbcy1h0kzd5].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1v2slrw03al7bz174xbcy1h0kzd5].[sum:Future Ppl Number:qk]' scope='cols' value='Future Trend' />
            <format attr='subtitle' class='0' field='[federated.1v2slrw03al7bz174xbcy1h0kzd5].[sum:Future Ppl Number:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1v2slrw03al7bz174xbcy1h0kzd5].[sum:Future Ppl Number:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.1v2slrw03al7bz174xbcy1h0kzd5].[Multiple Values]' scope='cols' value='#Employees' />
            <format attr='subtitle' class='0' field='[federated.1v2slrw03al7bz174xbcy1h0kzd5].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1v2slrw03al7bz174xbcy1h0kzd5].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v2slrw03al7bz174xbcy1h0kzd5].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1v2slrw03al7bz174xbcy1h0kzd5].[none:Technology:nk] / [federated.1v2slrw03al7bz174xbcy1h0kzd5].[:Measure Names])</rows>
        <cols>[federated.1v2slrw03al7bz174xbcy1h0kzd5].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 5 countries where users belong'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>&#10;Country with most users</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' />
          </datasources>
          <datasource-dependencies datasource='federated.0yc4xlq0c028h21c89tcr04xq2pc'>
            <column datatype='string' name='[Age]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Age])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Algeria&quot;' />
                  <groupfilter from='&quot;Angola&quot;' function='range' level='[none:Country:nk]' to='&quot;Azerbaijan&quot;' />
                  <groupfilter from='&quot;Bahrain&quot;' function='range' level='[none:Country:nk]' to='&quot;Bulgaria&quot;' />
                  <groupfilter from='&quot;Cambodia&quot;' function='range' level='[none:Country:nk]' to='&quot;Denmark&quot;' />
                  <groupfilter from='&quot;Dominican Republic&quot;' function='range' level='[none:Country:nk]' to='&quot;Guatemala&quot;' />
                  <groupfilter from='&quot;Honduras&quot;' function='range' level='[none:Country:nk]' to='&quot;Iran&quot;' />
                  <groupfilter from='&quot;Ireland {Republic}&quot;' function='range' level='[none:Country:nk]' to='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
                  <groupfilter from='&quot;Mauritius&quot;' function='range' level='[none:Country:nk]' to='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar, {Burma}&quot;' />
                  <groupfilter from='&quot;Namibia&quot;' function='range' level='[none:Country:nk]' to='&quot;Russian Federation&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;San Marino&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter from='&quot;Serbia&quot;' function='range' level='[none:Country:nk]' to='&quot;Solomon Islands&quot;' />
                  <groupfilter from='&quot;South Africa&quot;' function='range' level='[none:Country:nk]' to='&quot;Uzbekistan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' direction='DESC' using='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]' />
              <text column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' />
              <color column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Verdana'>&lt;</run>
                <run fontname='Verdana'>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</run>
                <run fontname='Verdana'>&gt;</run>
                <run fontname='Verdana'>Æ&#10;</run>
                <run fontname='Verdana'>&lt;</run>
                <run fontname='Verdana'>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[sum:Number of Records:qk]</run>
                <run fontname='Verdana'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='the end'>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 Stack Overflow Developer S (2015 Stack Overflow Developer Survey Responses Working Copy)' name='federated.0yc4xlq0c028h21c89tcr04xq2pc' />
          </datasources>
          <datasource-dependencies datasource='federated.0yc4xlq0c028h21c89tcr04xq2pc'>
            <column datatype='string' name='[Occupation]' role='dimension' type='nominal' />
            <column-instance column='[Occupation]' derivation='None' name='[none:Occupation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]'>
            <groupfilter function='member' level='[none:Occupation:nk]' member='&quot;Back-end web developer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Top 5 countries where users belong'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[:Measure Names]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Compensation:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Occupationwise Candidates Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[cnt:Number of Records:qk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Occupation-wise salary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Full-Stack developers Country Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Best country for my Occupation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='INDIA Salary Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Compensation:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Compensation:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Exp, salary and industry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Years IT / Programming Experience:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Age:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Years IT / Programming Experience:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Salary vs Satisfaction'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[avg:Compensation: midpoint:qk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:How many caffeinated beverages per day?:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Years IT / Programming Experience:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Occupation vs Satisfaction'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='103'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Job Satisfaction:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Occupation vs Industry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Countrywise Sex Ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Gender:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Females vs Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[cnt:Number of Records:qk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Countrywise Technology Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yc4xlq0c028h21c89tcr04xq2pc].[cnt:Number of Records:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Shifting Technology Trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1v2slrw03al7bz174xbcy1h0kzd5].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1v2slrw03al7bz174xbcy1h0kzd5].[:Measure Names]</field>
            <field>[federated.1v2slrw03al7bz174xbcy1h0kzd5].[none:Technology:nk]</field>
            <field>[federated.1v2slrw03al7bz174xbcy1h0kzd5].[sum:Future Ppl Number:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='OS Popularity (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Country:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Desktop Operating System:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='the end'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns />
              </tuple-descriptor>
              <tuple />
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Occupation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Experience vs Sal Industry-wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Age:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Industry:nk]</field>
            <field>[federated.0yc4xlq0c028h21c89tcr04xq2pc].[none:Years IT / Programming Experience:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Best country for my Occupation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Countrywise Sex Ratio' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Countrywise Technology Distribution' width='192'>
      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
      eQv9K2GFY10WvAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Exp, salary and industry' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Experience vs Sal Industry-wise' width='192'>
      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
      uaz5/8BsRxltDwC+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Females vs Country' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Full-Stack developers Country Distribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='INDIA Salary Distribution' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAVuElEQVR4nO3daWwc533H8e8cy+VNUbxWEiXKssRIsiRLsS3bspzIseskVhw7UVrkRRIU
      bdEC7YsiyJu+KQq0uRoUaBygCNCmBZoeadqiSXzotKzosK3Dpm1dFCXepHhfy93l7s719AV1
      8yZ3uUvO/wMQ1s7Ocp6l5zfzPM88z4ymlFII4VN6pgsgRCZJAISvSQCEr0kAxLTcZIxLn1wk
      ErczXZS0MDNdAJHdThx+i7U7n8azLRpabxBatx7PcjBwcVyLweER+hs/YnTlLh7fUEoyOUYw
      vwxNWawsK0PL9BeYgQRATGs04bF+XTXtdacZ1Iq5fPwoRbmVFBNlMDlCaNtWogQoKVnBsbd+
      xVMvfImzJ0+Qlxvki1/8fKaLPyOpAolp7dhcw5G3DpIwi+hpbaJ8VQ3JcCc3R+KsKK0gFFpF
      dc1DdHe0Eqqp5aHq1VQFo6xYty3rj/4AmlwHEKnkuQ4Xzp9n15N7yFkCh1cJgPC1JZBRIdJH
      AiBmKcmVKzfuX2THuXajhbG4lZkipYD0AolZSlBXV4/pjnJzMML27Y9w9YP3qO/xePpxDSvc
      Qk75Bh79VE2mCzoncgYQc3L9ejOhAsWRY0cpf3gHOcqlu7uTlrYuTp56L9PFmzM5A4hZyqG2
      dj35QY+ylQXsKq6i/Xo96zasZ1VFMZ32KGXrKjNdyDmTXiDha3fOAJZlEY1GM1kWIRadnAGE
      r0kjWPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPia
      BED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA
      +JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBEDMguJm0yXa+6PE
      Rnp4/fU3GIgkMl2olJAACEBRd+YY//avP6cn5lJ/7iCnP+m8530PNzJEx0CMWNzhmcdquVjf
      mqnCppQEQACw65nn2VFTTiLST8dghOh9R3iDdevWoGmQa7pcbA6z97FPZaysqWTOvIpYNpTD
      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
      4txcNldW8ezDG9lVvZbSvPy01/FnIgEQwHgYeqMR6nt6uNLTRX1PD/3RKHHbwp3HLhIwDPID
      OawtLWVrVYhtq1ZTW1lJUTA34zv9vSQAYlJKKSLJBL2RCL2RUXoiEYZiMUYTCWJWEtt1cTwP
      U9cJmiZFwVyKc3OpKCykqqj41k8RuZM8mC6bSABEeimXd48fomj9Lir1YU5euMKzL75KodND
      27DB9trqjBZPhkOL9Bq6ShcP0Xr5PPUtXTz/hZdZVWJyoe40jQ1dmS4d6bvEJgRA2TY25B7n
      dMMAL+1bz+lDvyRhm3SM9JMcs9i/fzc5GTwMSwBEmtn09w2y49NPYsdHiLtBnt3/FdaudPj4
      476M7vwgbQDhc9IGEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+
      JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYB
      EL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+
      9v86r5eDr725lwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='OS Popularity (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Occupation vs Industry' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29V4xcWZrf+bv3ho/IsJmR3jNpkt6UY5e3Xd091Wr1TI+8ICwWWCxG0Bos
      oId9GOw+LQQBO4PFaqCFNANJM1KPRtPeV7FIFlk0SW8yk+l9Rob35tp9SBaLLEYEM4tMsrLi
      /gACzIgvzv3O/e7/Hn+OYBiGgYlJgyI+awdMTJ4lpgBMGhpTACYNjSkAk4bGFIBJQ2MKwKSh
      sTxrB0xMnh4GaqVILJ4Cq5PmUNAUgEnjYOg6v/kPf8Kk0IUltUjr8R+YAjBpHLT8Tc4ttfIv
      //d/jJSc4F/9xUemAEwaiFwayR/GYhGw2R1YcjmzEWzSOAjBboTYBKm8TGJtGbW5DcGcC2TS
      KBiGzuVf/AW/u51AMESOf/cfmgIwaWzMKpBJQ7OtBKCqKoqiPGs3TL5GbCsBlMtlcrncs3bD
      5GvEthKAicmTxhSASUNjCsCkoTEFYNLQmAIwaWhMAZg0NKYATBoaUwAmDY0pAJOGxhTAXXRd
      f9YubJrN+LxZ26/CHMmnERNTAHdZWlp61i5sms34vBnbaDT6lZhz9TRiYgrApKExBWDS0JgC
      MGloTAGYNDTmrhBfAwxNYW70CrMJlZ0HDtMVdD1rl544iaUxbo4vo1oc7DlwlM6g84mka5YA
      2x6dyNhFpss+9u/pBVV91g5tCZFkhv4dwxw+sJegS+T2rVvI6uN3k5olwHZHLzETEzj+2m5c
      ImBoLI+PcOHWLPbQAK+/fBi3VXrWXj4+hkaxWES0gMPpQlFkEHKc++gyqXySnKWD73/7ENc+
      PMlsqkzXvud5qUfnN6fuUCwmcfcc4e1DbXx64kNWCw6ee+0F1MXbZgmw7TF0FCSswt2/SzFu
      LWt887vfZ78nxXi08kzde2KoFaKRFVYia5RklXQ6jW6olPUmXnvvOwx5dAo6CBYR1DyXro6B
      VkTwDvDtD97BVimSvHMJYeeb/N0P3savJDl76ZYpgG2P5Kbfk+fiZBRNKZLMlhE0BVU3kBUN
      6esSYYefQ0ef54Vjhwm6P6+42N1e3A4LNqsVIzZN3DPMt7/1Jq2edRuPz4/NZsEmSVitFlRZ
      wzAMNAPCQ4dNAWx/RLoPvYR77TI/+tlHxI0Ax/aEOPnzHzFv6WM4/GQai88avz+E9W5VThBE
      2tvbkQQ74bAPEAmEW7C1DBJI3+Cjc+O0dXaA1Uc4YAeshMMBvEMv4Iue48e/+Jiis4VdfnV7
      bYyVz+eRZZlgMPjE015YWKCnp+eJp7uVbMbnzdhGIhGCwSA2m+1x3HtsnkZMzBLApKExBWDS
      0JgCMGlotu84gJblVz/6kL6XXmNPZ2iLLqKTmLvFqUt30EUvL7z1Ct2+Lz/Kunr1NJn+4/RI
      ObB5cdlFUqurWFpaabI8nb760z/+c5bKLlxNLRw7/iJdgRr5Ka/x0x9/ShkB7GG+9Z1X8Ugi
      oDJ+6Sadxw7TtOGraqTjGTzNQSyorC3H8Le1Y99klrPLU/zmk7MYohPJ18233noBp6XeOzzC
      pUsqx451ASBnVkkKzbR5rfcstq0AiqvzuDt7iMfSGJ0hDLVEZDWKYfPQ2uynVCpjVLIotiBu
      Cqwlcrj8zTT7XAiC8OgLAHo5x825NG9953t4RA1Vkihlk0STWdyBMCGPhXQmRzGfB6ePjpCH
      xFqEvAItrW3ochGXy4OulZFVC5pcoVIuMDp1Ad29g8EdHWiKgmQYFNIJssUiFc1GV1cYvZwj
      GkuBZKe5rQ1HzYdFI5vOUirkqAhO2lubsUq18+dt38V3j76IEp3m4ugkXd84WN3Q0Gje8TzH
      j/Tf+6icSxJNpliNZehAJptW8PidlNJ5bH4vcjpKPFOiKdSKXc0RSxdwekN4bUUufXqFzv17
      6O7sQK4oIOjkU3HimRL+lna8NoNMNkM+X8TubaHZ7344HqqV4ZffYk97CyOfnKekqiiZJMlc
      GZe/hXCTRCKZo1gqYvWEaAtqyLKKJpfIywZ2pYJqESiXcuTTOQqKtn0FMB/JMbhrB4vXJslq
      fSTHrjO9lkdWNIb2HWBt8golxcng8A5ujY0heZpI3JjgtfffxL/BkVG5VEF0e/E5LIAFikk+
      OX8Rm9dHYnSKl1/cyZlTNwi2BlhKTPGd53v49PI0vkAAmyfAzK3LHDz6DYrJKZYzIcKArlTI
      ZLMo5TjhzhDJ2Vk6m9tZ+PQjkr4uWFlB/9Z3SV74hLwtSGVljv73/z47a75uy1w58wlSIEw6
      kUR69XU6/Y8qpUT8LWGM8bG6Vitjn/LXUyPrJcA393P5zEVEv49krgQkGDm/xivfHGbi/CXa
      3z7EjVMXcYebabG4caQXmFpNUdJmOTTcRTaXxR6L0tLazPzEPM6Qlavnr9IU8DE2uchzezo5
      c/UGrc0txO8s8M6br1bN6/VTZ7ll89Hcs4cmK8wtzDCfyJOsLPH7r3Vw4uNxOjtdLGVX+MH7
      PSilNLeurOLo3k1LcpzlQB+VlatMzKg0NcnbVQAak7cuUpiNUMlEcQzuJT49RckSxCLZESTQ
      xQCvvXscPTLGfHgXrx3qZfHCCZZyGv7gxgRgtUnrAyeAAJQyWSytvRw/uJvpc2eJyxVCvcMc
      P9LDyMh1bE3NtHpmWUsmSOVKVdO0uIMM7RhEDOylq8VK8u4z6PF3seP4ccTb51hUElTsu3jt
      GzuYPZPhUbN7bMFejh8/yNzodWBj82NUWUZ4RLWrY8/xeyWAER3FMvgC39jZxE3j6sPGsWno
      P843DgRBKTAynUBRdWLxOKLzEIP9gww+fwwPeQDyhSSBjv0cO9jN5QsnKRU1uncf5uhgJ9eu
      XkKv2jnv4OBr7zLcHub6mfPESy2sxTMoqkZqMUWODjp3Heb4QR+ffjoBwNr0NTIDB3m3PUAp
      eTcZu58jzw3gaypuTwEYmQmsA9/mey/2UozPcXNpmb6OMLcSFnxOB4JgYHG6sAlghNqRbnzK
      hydmyOYM3j6qsDgdo7W3mcWlKIN93TWvI7p8DLpy/PTXJ/BZbPTt70eLjHIitUa2qPHGbgcx
      Pl86qJTKGBY7LrtAoVTCZ1U4f+4sxcwazbte+Txhrcy1C2cpHz1U/cJCEGvhAr89sUxlJcru
      GrWUWiSWpxGD/ZSjC3g7uh+YC5SLznHuExk5X6Dn4Esgp5mNqHSFbSwlyvR3hu/ZJhfGOJ1f
      BKuf5w61Uzh/hhOrTcRXSvQe34Wen+GTk3FWFhK0v3sU6eIpTiS9tHX1U1F0nC4XTnsBAQmp
      ssapk6c5duwIAE2eZiavXeBkapKi6qCvyw7FRw1JyczeHCUx7SMRL9FpaMiaiMtlx2GrPuWj
      a9/rDIZTjFydYE+VYY1tORAWaHJS1O247SKGplKUVVxWiCfS6KIVn9+Lrmq4nA7AQC7mSGWL
      2D1+fG4LhVwFp8dBoVDC2+QBag+6GLpCKpFEwUog6MOoFEhniziaAnidEiVZx+WwUiqVsdss
      ZFIpZF3EFwxiUUskM3kkuwOX04VFl9FsLqxamVQqh83rw2aoWBwutHIJi8sFlRKqxcL8jREW
      k0UKqQovfPfbtFofcu2uz10UizIulwOlUgaLDa2cR7A3oZXz2FweLKJwL3+5ZJS8rGN3NuH3
      uhH1CrmSgdshUqhoNLmd6wNhfi+FfJ6yooFopyUcQMmnyRYVLDYn/oCHciZBvgJ2qw1PwIua
      T5PJV3D6AtjUIumigt3poMnlRlcKpDIFvKEwRqWMw+2gks+QKch4/EFcFqjo4LRaKJfL2BxO
      lhYfjImmlEklUyiGgN3lXX8OsknyFR2bzYHXa6cii7gc4t17IlEsgtMO+ZKC06KjSB4ko4wo
      2hBFfXsK4Os/EqwTW5ojminjCbXT0xagWrPWHAl+fLadAFZXV7Hb7VuStsfjeeLpbiWb8Xkz
      tsViEYfDgSg+22GipxGTbdcGCIVCDVACbAyzBHh8tlTiciHF5NQ0hYoGGFQyEa5cuszcWgYD
      UEtJro2MMLWUQDNUonN3uDI6i6oblAtZMvnqPSkmJk+KLRXAndu3iKwtkM6p6KrMpYtXsHlc
      TF8fYS1b5PqFS9DkZ2H0MvPzK4wtRZFiE0ymKqzMTlPSvwYrmUy+0mxpFWj/868wd+cSAqCp
      BXB1sGfXHryWIunlGDl7iNd3D7EmyizlMkg2Bz5BZm1tBY8zRJAKqm5FZL2ZYhgGhmFs2ZZ5
      23J7RFWGcqq+kSOwbqvrCEq+aoP6MwzJvuX3eTNstQ9PrQ1goCJZ7AgCSFYLWlHFal2/vFWS
      ED1N9NtVpjNttJAnO7PAyVGD3uEX2dfjB0DTNDRNQ92Chd+6rm9JuluJruvIq7dQ/uaf1LWz
      /sF/Qtf9qKqK9dN/DdTu99D630O39qGq6oanjGwVTyMmT00Akugmn7pGsdLP2vwa/qFu1m7M
      kKkoLK2t4Ok7SmdfF/aZm2R8PbBW5MXnu1iIprBaW9adtVjQdX1LGmeiKD7zRt9mEUURq8XC
      o3bxtFosiPrG8mexSEiShNVqfeb342nEZAvbACVO//SvOTsyysmPfs1EtMLBoRZ+87OfU/Lv
      pLs1wLED3Zz4yY9IWDvoCTehawoJ1UVv0Ednq8H5C7do79pePTMm24stLAGcvPrBD77wWZDv
      Dx6+95e1fTff+8Hu+763s2vXEABdwy/RNbx13pmYgLkgxqTBMQVg0tCYAjBpaEwBmDQ0pgBM
      GhpTACYNjSkAk4bGFIBJQ2MKwKShMQVg0tCYAjBpaEwBmDQ0pgBMGhpTACYNjSkAk4bGFIBJ
      Q2MKwKShMQVg0tCYAjBpaEwBmDQ0pgBMGppNCkAnOnuHWC7Dh3/7Xzg7ulJniyUTk68+mxRA
      gfM/O8HM+AkuRItc/s05slvjl4nJU2GTArDh9xb5y/9wmhePH8Dqdmy//dVNTO5jk8+vnVf+
      yb/g2B9qWPUSB3uHefgwSxOT7cOm2wDzF3/C//Y//h9MZGf5+W+vIG+NXyYmT4VNCqDIzZFF
      BnZ3YLgdVJYjFLfGLxOTp8ImBeBg175W5qfv8Nd/+p8Qh3awvU7VMjF5kE22ASwMvf6H/J/7
      XiOr2mlvDZqNYJNtzSZLAI2p03/F//RH/5qUMcu/+8uPKW+NXyYmT4VNCqDE+I0EB44NIrhc
      GImkKQCTbc0mBeBk75Fuluen+Os//Svc+4Zp2hq/TEyeCpuswsvEMzrH3v02Rw/tpa8zjHmO
      o8l2ZtMlwJE332bAlefDH/1n/uwvfsidVXMyhMn2ZZMCUFmdvsPE/CI5xcquwWZ++8Ofkd4a
      30xMtpxNVoEUMhmVXc+9wbu9AzR7LRwciOPcGt9MTLacTQrAQTig8Of/7UcoSDz37X/EO4e7
      zUUFG6Cs6Kh67cnjkghOq9mietpsUgAFzv/uBt/85/+SfeIkf/bvL/Di4W58W+Pb14oLC1nm
      UpWa34c9Vt7fHXyKHpnApgVgo71D4Hc//hWL0gxy6DCOrfHLxOSpsGkBHP7OP8UzfoecMcDL
      u3Zi3xq/TEyeChsWQHJljJHLUw9Mfy7JIi+8sMcsBUy2LRsWgChZcTidUMkzNTZO0RbgaHgn
      wgZ/r+QWmUl62dW73mIopheZWIGhUImJrJ92MYYe6CIdjTPY6iSi+ehtNpfbmGwtG+7A8bfu
      4LW3X8YRnaTSuped3gLXpmMbF0B8gbTxeVmRXZjGEmrHHe6kvDjNajSGgk4imWR2KYbfbdts
      XkxMNs0m2wAGiCHe+Nbb7LYN8R//3U3SZZlmh+2RSlJFFzPnfsLcBYGBI6/Sroo4XRYQJKxi
      kXD/IDfPnKa1vw9Z1Tnxi/+GJbSb914/CIoCgKIoKIrCX/zqCr++OFPzWi0+F//qf3gTgEt3
      Vvl/fny5rm9/8kfvoGka5fLWTe3TdL3u94aub/r6mqYhozzSTlbke/mzQ92XlqKqqKhUKhX0
      R/i81Wx1TGDTAgDRXuYnf/an/FaSyWQV/utfOviH/93v4a/7Kx3R18v3fv8g5Kc5eSlCV7dE
      bDVJj1AgqwfZ39rHO++3MDq2gEMssP+VN8mPTZIXBIK29dJAlmUMw0A3BEoVtebVKoqGw7Fe
      2oiSpa4tgM1moyJJ936zFUhi/UAKorjp60uShM1qpX7uwGa1IRkby5/VYsFisWC327HZnm0p
      LG1xTOBLLIofOnSYeWUaBNjfuZc33ji8oZHgSnaVEyc+oqJb2fP8q4SadcY++pi/vSZy+NW3
      sQsGmcg8jnAvXVKUj86cwhIeZt+XypaJycbY9EDY2Z9/gvPF1+iygsvfvMEEREI9e/mgZ+8D
      n775e99/4G9f9/DdQbV+vvO9/s25ZmICnI18RFkr1fy+1zPIDt+ee39vUgAe9uzx8auJRQwv
      +BU3Q7u6sX5Zb01MnjCjqWtklUzN7y2i9XEEUGBmtsyBNw4z5JawOX3mw2+yrdnkPDYrAZ/B
      ylKMSCRCIpXj2fYTmJg8HpssAQTaD7xIbjVNOg26NWgKwGRbs2EBlLIpFKub3r0H8HZphEJ2
      ktGCuSTSZFuz4SrQ1MUTXJyKUMyM89NfXMEgyi/+6kNqNzdMTL76bLgEMAyVXCpB3J4il8sT
      iyUpyY8agjEx+WqzYQG4fHZu/vTH3LRqZLIa/9+/vYrde8jcGc5kW7Ph53fwue/yPw8eI1Zy
      MtDlYnWpSLgrZLYBTLY1m1gPMM7vfv5TbkSsHNxtZ+S8zD/9X/4Re7pbzFLAZNuy8SqQt5me
      vl6KoQ7ee9vD0vg1RE0zzwgz2dZsWABKpUBybY3x8Sl+mJCYWimwuJJgsK/NHA3+mrKQmqes
      1D4Bosnhpd3bCUAsHyVVTNS0tUhWBkI7AMhVcqxmlupeeyA09CU83hzJSnzjAvA29/Hyu9+i
      50U3B3YK/PJvZzl+dAhz2crXl39//t8wERuv+f3x/lf4o1f+VwB+O/4LfjH6k5q2Le4wf/L9
      fwvAWOQW//ep/6vutf/fP/jzL+Hx5vg0cmJz1Xd/2xD+tvX/f+vvtm+FTyYmTxVzTyuThsYU
      gElDYwrApKExBWDS0JgCMGloTAGYNDSmAEwaGlMAJg2NKQCThsYUgElDY85kNvlKo+oKs7nJ
      ujbtrm481i93YrUpAJOvNGWtxE/n/0tdmw96/x5DvuEvlb5ZBTJpaEwBmDQ0pgBMGhpTACYN
      jdkIvo+KqnNmtv5WXwfa3bR41tfBnZ3NUFZrbw7ZG3Cwo3kjpyc8yGK6zESs9hbfgiDw5o76
      R5KYbAxTAPeh6QZLGbmuzdB9D/RqTqYg1xaAz/nlbm+uotf1Y6Pnspk8GrMKZNLQmAIwaWhM
      AZg0NKYATBqaZyYAQ5MZH/mYn/3mLOmySjG1yIe//CXT0QIGMkuzS8jmtnMmW8wz6wVKL91k
      Se/mleEcF0am6LFG6D1yjOWpMXwlF3lbJ53PyjmThuGZlQDFVJ6enQP4u/YT1KKoVpHVuTl0
      wSCaViAXYSWZe1bumTQIX5k2QOfug3QGmmhrcqBqCtF0gvGrtyk8a8dMvtY8MwG4Ah4WJmZI
      L98kKYXxur309LRQ0p34rNDS2U2TqKE8KwdNGoJnJgB/1366xEU+GSvz0vM7sADldI6uoUF6
      du0geWcMS+8OzAF/k63kmTWCBcnG7ufeYPd9nzW197O+rsfPN95+99k4ZtJQfOXnAhmGga6v
      z7fRdZ1yuYzbatAVdNT8TdBrI5/PAyDoSl1bgHKpiKIoFAsFnFTq2irlIvn8+uGAdr2CXu+k
      ZFkgn1+fuSOqZZzUnt9j1bR7PuuVcl0/RCCfz6MoCgXDoNy0o67PhqyjKMp6+lIAjDr9y7JA
      RatQKBQIWEO0O7tqmnpE7z2fnbjq2gbsgXu2KEJdW4BysYyiKJQKJbx6oK6tVtLJS+tpuzUf
      6LUrNlLFes8Pq+JAMIx6d+PZYxgGmqYBUCgUyGazuN3uB2w0TUOSHj6tTFVVLJYHNa7rOoIg
      IAgPTilLJBKEQqGHrm0YBqL44A2tlm4tP2pdr5rtZ2L/4ue18lfLZ2BD+auVdjqdxuPxPJTH
      Wj5Xu0fbJSZf+RJAEIR7GZMkCbfbTTAYfOTvDMNAURRsto0d4ZHP5zeULoAsyxtOV1VVBEGo
      +jB8EV3X0TQNq3VjZ+5sxufN5s/v928oj5qmYRhG1Yfvi3wVY/KV6QY1MXkWfOVLgEehazKR
      xXkkfydSJYevpRXrXVnfe5PqKolYlEKlQqWiY7dbUWSN5q5ufI5at8CgmIqwkDLoDVioOEP4
      HdKD6QJyPkUkmUOuVLDY7aCpCE4/vW3rb64H3vxygcW1JKpSwRAsWCSQdRv9Pe1IovBAaXfP
      C10jtjyD7GzDrRdxhlpxfLEwMXTSiTWyxQqVsobdYUWtyPg6egm5a5UmBnI+wXSkSG+Lh7Lk
      Iuh5uK2kFpJML8Ue+Exw+NnZ2wrwYFVEKbESTSDLFVRdxGYVkVWR7p5O7BbxoXv3mR/JlVmy
      YoCgJCMFWnFXCUkuGSGVL1Mpq9gcNjRZxh3upNXrfCjdzcRk25cAqeUxrp0/w8WpJHdujJDI
      rzc0v1inFCUJS3aWT0ejiBaJ+PQVZuJ1Fr/IKS6cucjJS9fRE1OcvxO999UDdVVRxCLoXB65
      hGoIGPkYl0fnHrC9Z3+32F2auM5SsowkwLWrl6moxsO299yY5tKZs3wyusbSxBUW4tVXiomi
      hKW4yqc35xEtEsXFa9xerdOgV4tcPDvC2ZERKol5zt1erGomWGw0NTU9+M9lr5u/zNJtxpfz
      WCwW7twYIV3SauaPwgLnTp3j9I05UvPXGVvO186fnOLc1QlEiwVlbYxr85/PFKgbk0K8Zky2
      fQkgF3JYnG4UTaUsyxh6lTa9aCHQ3ErAmsKzWCTUEqbkc5Aoy4CrRsJlsoqIxyYiKxVkWatq
      ZnP56LA7CTe5cYWa8TvK6Ks1Tku0uujocFFYCZD2+Ai3eLEIGvX6IbRiBsPuAUOjXJGx6lV6
      nQQRbzCM11bCN7WMvyWMPeZhqVgGPDUSVkiWdHwuC7IiI8vVhxwlu4eODg/l9Arnzl8mU9ER
      /b188Nqhh40tDlrb2iHbQiLrJhwO47SBpmpQ6yzRUpayxYVFMKjI8l3bh3H7W3DbdYKjKbzN
      LXhzPsYz5aq2n8WktcmNK9iM31FBW45VtZX++I//+I+re/bVQ5ZlNE3D6fx8WaKzKUA5nyaX
      jODt3s+O7makWmsGHSEc5SUWIwnyBDgw3HuvupTJZPD5fJ/b2tyE7DKxVJZE0cFzx/bgstYo
      MEWRzlY3o6NzJDN5BnYPE/DYq9sCvoCf2MIsiWSMQNdeOlu8fPHF+BmSpxmhlCCXimENDjI8
      1IFFqOWzD6+QZGYxRqxo57nDQ9hq5c9ip70JVuJZUnnYf2gvPuf6Q5rP53E6nQ9UFUbOnCIv
      K3QMDFPK5xjq766ZP1dTkHxkllgyhjW4g4GuOjFxNeNUEqTTKWRHB4f39dX22eqm2VXhzkyE
      WFbnyKHdOOvEpKPVzejYHMlsnsHde6vGZPtXgVamEDuP8s333qNJWSVTqFOtUbMsToxyOwoh
      LcJCso5tIc5o0sp3vvkur+5v5s5c7TNwMXTWlpa5OT5OwOdhbmG5rs+55BqzE7fI29qJz48i
      a7VLADW1wlLFTV9vP/v2DuKoFzGtwNLUJFfms/Q5M9yJ1qkCKSVmVxJ0tLUzsPcAHb76i/ft
      VitOl4NMIk46W3+GVikfZ2nyBst6K5W1O2TL1d/qAGQjzOVt9Pb0snf/Htz1Osu0MsszM1wY
      X2JnUGN8tXp1CXggJn5vU82YbGsBFFJrTE9OMjU9w/z8DPMryfon16dmielBbFYJh80gkapx
      A5Uii3MzTExOMTc3z/jELJU6Dymayq3ZOL1hFzabhWQyXdfv1aVFmvw+dCRKpRxqjWIfwBbq
      47Xn9uGRypw/fYqlRO3dIsiusFh04HVa8bolVtfq7HBhdXHg6PMMdIWIjl/k9PW5uj53Dw1z
      8Ohxhof6eeuVF+raZlbnsTYFUTQRXS1RKteZ0eXt5NUXDhJyGdw49zF36j3UpSSTCYMWr40m
      t4XIWp37rN8XE6tUMybbWgCCIOJwe/E4bUiSledfeYOQp05fsK+XsC1PZnWSq7Mletq9tVJG
      tDoIeN1IkoSv/wgv7wnXTleysKc7yFoqy7WrowTCrXX9bm3vpFzMsTJ+Cdnehs1a+7WnlVJc
      +PQc8bLEjj37CPtrV63wtNPtUUjHFjl5PcauvjojqLrC8uQ1ro4t424f5MCO+uc+R2bGiOQN
      Wts7aA3V34jWG+7GqORJzV4hKvvw1ouJnOfKhXMspRS6hvbR01yjTQbgDDAYEkml4py4OM+O
      3ubatqKFPT13Y3Ktdky+8iPB95PP55Fl+YHBEU0ucPvSeeYTRXCFePWl5/C5ag8kGbpGIV/E
      7nZjlT7X/8LCAj09PfdbklgY5eKNGVQDuoZf4vBgnRsOyMUCimjF5bA9cusSTa5QlFXcHnfd
      t5BezlMwrKilIh6/D6tYz2cwdJ1SIY/k8mCvlz9NJVeSEdUKhtOD226953MkEiEYDD4wsLR4
      7Xf8YmSVvr5O7IFO3jh2/yyuKn6rCvliBXeTG6lWAwdALpJVJYxyEYfPV99nwDB0yvk8gtON
      3SI98j4/Kibbvhdobeoyq7EEdL6ANz6KJlR/nJRcjFhOZnVlFd0wQLLSO7iHsK/GG7WwwukL
      0xQcTt7ptjIt1HhLqxUW1pJIpQQrqfXqiSPYxf7B6m/UaGQZXS6w+Fn1xBng0J6BB8R4P5qc
      5je/usjOPT3MnI5x/J13CFfrKC8lWEjKZGKrlBUNBIH2/r10hWrV7TVmLn7EmrsHe3wa6+BL
      HN9duxRwdx3kn+19E5ugEU3VXqiUjq9SLpdY/KwnzN7E3l07cNlrPWolTv78BB07B1mdWeDg
      W9+mx1flBVbOsJAoUkqvkS2uV6lC3bsYaKtSim8iJtteAJLFiqXJTzERoSiXqdxELb4AAA9Q
      SURBVFRUcH7hYdUUsopEs9eFJvbjd9tAEHE46kw5ECRsdhsWo0xKhXgyDwMPVykqlRJujxdV
      MtgVbkIQQLTWEJVcwLB5cVol+gZbcVhFEC1YxNrvMSW1hK37MPv392Gkf0EsVSbs/kLXpqGT
      KhmE/S5EqRuf2wGCgM1ep+qhFJnJWHn/jYOIqyI/m0hANQEYBpqmcuvKBQYOv06ztcCpczf5
      wQfvVEmzhCK6aPJY6O4P4rZLIErY61TxyCxSDu7l8ME9hLUoi2t5enwP3+dcWSHodZMR2+no
      Wa8mWe3Vxf1ZTLT7Y2KpHpPt2wbQVYrFAo6WHezes5/9vU307T5M0FPloVbynL94leLaHS5O
      xhFFEVEQam6xplRKFAwXRw7v58ihYRRHBy8MVW8DJOZvMzazwsVLV9GM9ZHRmo9zZoazNxaY
      Hr3Garq87kedhx/AFt6JM3Wby5fPs6qE6GqpUkfWZC5dHCEfneXC6PK9/D006PRAwk0c7nNx
      +uwIZ28usntHR3U7Q2Nx8iYz80vcuHaJkZuTDAztqm6bX+HTq1OsTN9gMpL//D7XIzBEmzrD
      yMhFRmN2dnVXb5eNXRshurrA+RvTd++bWDN/n8XkwqWrqJ/FpFY387YdB6jkGJ+YIhpZ5eqt
      CdxuFwoSzcEAVssXdC1ZcVNgZnqGyUgRu1EknsrgcPtx350KcX+fc2JpiumFCJH5ceaSOk4r
      WN3+qv3IVoed5NI8kzOzWCwWkok4OcVCOFiloehsQo7OMzs3S7YClXyaeE6htdlfUwii1cnA
      4AB+fzMtPglddN2rTtzzWRDx2hSmpmaZXE5jF2TiiSSiy4/3bt/+Q33qgoivrYfuFh9dXa3k
      yzoh3/os2wfGAQQRf0s7beEQvQND9HR10hL0YrVUeavbXZCNMDs7QzSno5ezxLNlggH/wzG5
      l0EbPQODhPwBOlpclDR7VZ/ddliYnWNiMYpd1InH42hWb/2YzM4iSY+IibGNyOVyRiKRePDD
      Qtz44U9/t7EEikljMZ43lHLBSGXyhn7fV/Pz8w+ZL1370PhkLPbodDXVWFlZNVRNM7KphFGS
      tbrm6XjEyBZlo5RNGtmS+oAf9Rg992vj+lyqts/ljLEYzRiaUjESycwj83eP2Ljxww+v3vtz
      dXXVqFQqD5gsjY0YH374ofHLn/6N8W/+82/r+llMR414tmyU8ykjU5A3nL/IzRPGydvR2j7L
      BWMxkjB0TTWSiaSh6nVS3mBMtn0bYFPIES5frdCszpJRRToPv8PBzjrdbhvF0Bi/eoV8t5/R
      +QyCt4MPXj1Y0zw6N0ZKDLC6uIwhSrz33jsPj2iqZRaXlindNwUjmlNp7a5Ta1WSXL2yRtS2
      RrSg4Rl+m5cHHn7r5RMrrCTu62/Pr2G1PrxW4H46dx+jczfoxSR/8+GlurbZ6DTjWR/5hTsY
      FgvPv/4e4aYvVE01mdWVJXIl9fPfJUo4Ouu0F9QcNy7fIefPMZ0ycPQ9z9t7a3RPPxSTdj54
      9eHpG9tXAOU010YnKVdkfA6B8+fPg93L/uGduGv1OCg6peIKScIMdeRJlarPBYrM3GIumkct
      gyze4Xx6ipbeYQZrjhsYqIbKwmKCwcFe7izVGawCdF0lGV/C2zpEMTqOXmP+kj8Qwq19Pven
      OdyKx1Njbg+AplOpxFkuujm0C27lKsDDArC5vDQL9838bG7mbYf7Ibv7mb9xhhvzKQxdx9u6
      s66toarkk7MIvp141EmUanOBBIkmXxC7+778tYRxeeqMMeg6spplekXgyJEQF2PV5wLd9QLt
      s5gM9HFnuVjVavsKwOHn0JHnNmxuGAZGcAcv7AQp2IVbSdMWqv5Atw3so21gwwmjC1ZeeO4w
      y1mdjpAHf7D2W9rQdXp2HUJYSRDq6KLQ7lrvDfoiooUm3ya2BDAM9KYuXhxWkJ0hvGKB53zV
      F5PYnB6Cmzy2oHv4eXzdRRwu170lqtXd0An27Wcny/g6+1HSbkJNVXpgRAmPd5P5czbz0sHd
      pPHQ5FJ5qbnW2389Js/fH5NQ9ZhsXwFsEiUbIZKusBxLoK3FwWJnyBXG79j8ARYPoJWZXYoh
      FaNEYwWiy+Bs6aertfoo7OryAnolx+paktW1CLhbaO/oQHpEb9AjKcaYjZVJxuMUKxEWBZGe
      3c00u+q/2TfKwuglPrk2wf5jL7O4HOH33nm5ql1ybYlSschKNMZKNAYOP75wJ2xgxVhdyilm
      1/IUEjFS+WUiQOugh1Zvla7eTcSkYQRg87XTY09jaQrTEXRRTEeRbRtbelgXi5PBnk7WYg5e
      3t2CoJaIZmtPsuvo7iObinGkaw8eu0gsGntkV+iGcIcZtOZwNgXoCDWh5GJk2NgSwY2wEk3S
      GvIhiiLFYu3JcKG2HsrZOK7wAEGPjWQsgqXGIN+mcAYZ7HSy4m7iQEsArZAkodbY7GATMdm+
      4wCbxNA15LU7nLm9gixXWJ24zNjyE9h60TBQ5RLnL16kWKpQTq3wyeWxmuaaqjB7+xLzkQxy
      uci5c+fXR24f2w8dOTHHmeszyLJMZu4aI9Opx0/3Lvv27kYzDOYmRuka3FPTTtdU1qavM7qQ
      RJYrXL90nkSu/qk7G8LQUbKrnLk8hizLFFZG+XQsUsP2/piU68akYUoANRth5NYUkUSEETGC
      IbQw3FWrUbsJtAozd26yvLTE5csjSAgM76rdSIzOjXJnZhExbSW95KB9cF/9kdKNUkxw6eYE
      kSWdEXsOTXVz5NjGFpTXQ5eLJDIFsPg4cvRFVEPA5qzdEE+vTHFzYp6kVUVIuXG27iZUrZqy
      WSoZbtweJ7KYZGTEQFPh6IEakw61CjN3bt2NyaW6Mdn2k+E2RSnFXEqj2esABOwO570BmmoT
      rzaMrrGyukKT17++3M5iw+2oHfRMfIWKcHdAS5Bwuxz1R21r8JDPlSzz8TIh3+dTBT4T12by
      d/9kODUfZ3xu/U2rqwqZ+DLjaRf//e+/WfP3pfQaKdmG12UFQcLpdHypNs5DPitFFqIZgr71
      niKLzYHDVuMdvsGYNEwJAICgcOf0L/lJwUKzoHLkO3/InvBjNoIBMMguTfPLG6N4XF7EtmF+
      8NaRmtblTJTTZ86Rs7Wg6Q7+8Q++hcP6BNoBgsrsyMf8OFqiTZIZeO8f8FxXnW7TDWDxNLNv
      XzP52CyXb8wgeXv4B6/tr/sbpZTm8kcfs0gLdlXn7/zB36mzOH8zaKzcusjfzkbpdgqEXvyA
      13fV6AkS1mPyqxujuFxepBoxaSwBpBbJOMJ0hNp5PhRjJVOBJyEAXWVyLU9/VyeDQzu5Mput
      ax5bWyMQ7qC18wi5hWto1cYBvgy5KDGa6Ojq4p2BCucSJXhMASi5NS5dvUXF1srRb7yKx255
      ZGmVi63gbG6nK3CYYPYaZVmDJyGAUprFkpXO9l7eP+jlt2t1xgE0lam1HH1dnQwM7eRqjZg0
      lgCaexnssFApJphOCPT3PYFRYADJyu6uDmS7yuziKqFQ/apGa2cvhq9CPDqNxdWCpeaC2U3i
      a2Ooo4yipLi2KNN74PHbOHqlQLoMAVue29cuAyA2tfL83v6av/G299EiFUiuTlIS/Ljrzbrd
      DO4AuzvaUI0cF6ez9Oyo3RhHsrKrqxPZrjFXJyYNIgCdYjoN7iAHDzpZXnKi2wN0B55UN6FI
      59AQFpuIy7aCO1zrbBuNVCJLsHsX7lwcu8WBv60b22N3ExqUsylUh4/9h3cTWV6iaLjoC9dZ
      PbZB7M0DvP/uRkcFNTLJDM5gH3tcaeYtFjzNnXgf2sjoSyI66N+zC6skM7sQp7OteummySWy
      JY2hI4dJrS1isYZo66q+F2ljdIMqec6eOkfREJi+fIbZjEx07AJTsfob4W4YXeb0xyeZuXWR
      8bkFPrl0u7pdfo6Pz0+iKhnOnTxHxSJy7sx5KlqdDXY3dH2Fi6c/IaMYrNy5xM3FDMXZEa6v
      1J+S8cQprnLq09soaomRj0+St9q5fv4sqfvm+zxe+lF+d+oid86dYjUyy6nb1btB4/M3uDq5
      hlFa4cQnt9FKMT69NlnVtjEEoKkUseGxlplYzrF/9266WuzEU0/q/BkBt1Xj9lyagZ4wUq2l
      +eU8usNLbmWWvL+XfX29WIw8qvq4AtApaNL6lOiZNfbs28+Obh+RtfptkSeOXEK1ulFzEVYI
      cXignyabXH9R/GaQrFgrcUYTToa7nAg1Vl6olQp2p5PF61cI7HuBXb3tFHKN3Aaw+3lpOMjJ
      X5+k49Cr+J0wq3vo73hCx2+IVl566z2KFR3UEm1dNSZ0hYbZ4TjJ5SkLR4+9iK7LNDd3Pf44
      gGTnG0f6OPvRKXz9x+j0S6wu2BgeaHm8dDeLr5+9obOcv5zg0LEXwajgbGrFV2XLxS+FvZl3
      3n8f2ZBQCzneqLEovqVvmLmRq4wZzbx81E8xlWGgt3q1tHHGAQwD3TAQBBEBA103EKTPV289
      3jiAwqUz52jp9HJ7Yg17Sx9vHauxasow0AFREDAMHf1Rq8jq8EWfDV2HJ5C/aoviN8x9+cMw
      0HQDUXoy+aOS5JPz03QFiowuFWne/SIvVFmmuu6GjoGIKKzfFwOh6pSTxqgCAQjC50vjBOFL
      B6Uquk40k2F1doXOnnZSiWR9P+52IwqCiPQlH/6qSW9V/jblxOf5W98r9An6USmylk8xM5nh
      wJ4QS5Ha+wIJwvrDD+v3pdZ8q8aoAm01kpXnDwwxldToDodwep7Jo/f1p6mVY71RokIQn13h
      6K76exltBFMAj4thoGg6/o4BDrWuN2Z7/eZtfeIYOoom0LFzL213Bw47LY/fjW1G6nHRKiyt
      xJFKcZYS66uOnKEeDu+qfwaWySapZFmK5ikmV8nc3ReopW8vQx2+R/ywPqYAHhNDstLssbFW
      cRAKunH6/LS11F9fa7J5DJubJmsO1eUl5JRoag7TVm2Xh03SOI3gLaKYXOTj05eQPGE6W31E
      Jq5wZXL1Wbv1tSM2dYVzt5bwhNpoDdi5ffYEM8nHH8g0BfCYJJdmCe06Sn97EE8gzNGDe1ha
      XHjWbn3tuDO7xpFjh2gP+fCHu3njcAc3Jh7/RWNWgR4TURTIJVaZnLw70lhOofOE5r6Y3MNq
      MYgszlGM331kM1ksYp0duzeIKYDHpHXoORyF+6flBnnnSc0yNbnHoRdep1C5b05RMMibrsef
      7WoK4DGxONyEHrGnjsnj4/D4cDze0oaqmG0Ak4bm/we1gknguowjMAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Occupation vs Satisfaction' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Occupation-wise salary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Occupationwise Candidates Distribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Salary vs Satisfaction' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Shifting Technology Trends' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO2dSYwcV5rffxG571tV1r5vrIXFnRQpUntLrZnpGYwNzAA+2Af7MLABXwwf
      7cNcBoZPvgxg3wzDGI8N24NpWBJbLVGiJG7FpYrF2vd9zazcl1h9oNQSp9VdZCWTZCrfD+Ah
      szL+8WUy/vFefO9970mmaZoIBFWK/LIDEAheJsIAgqpGGEBQ1QgDCKoaYQBBVSMMIKhqhAEE
      VY0wgKCqEQYQVDXCAIKqRhhAUNUIAwiqGusPXyiKQiwWe1mxVBzFYhGHw1E2fcMwkOXy3aOE
      PkhiNujRWVxeYzNVvp9P1TRsVuvhHxT6R+apjs7GYlgiEZxP8Vkld8Cj8Sns4RaOdTVjlaWS
      AnyVOUjn+Y//4/7LDkNQAk/VfsRXV0k/lZzB3Ng44a4BAk4TTf+Ru6OaZ2F187feHh8ff6oz
      mLrCg28+5aOPPmZ0buupjvlRtAK78eTRjxf8JHjq9sNU89y58SWbBwbHT/cQj8uc6XVxf9HE
      V5xnZiNFY+9JWmr93Prma7qGzlKX3+WjqyPIrii9QZhIJjnW1sVuoojPOODO+CJK0eDYUBcj
      IyPs5STeuTD0e+PIZ/fA38OHl9qAImsr2zS1hVlf2Sdol9gvHFA0g/hsBfb2MrS3RXk4Ok59
      72kabQWm1xZJF7301Kh8emee/uFznD/Zg6XUX1JQkRzSApiYpklRUdHVPJmCjkXLsJVx4DJj
      PJrapLWzloNECqfVZG1jm0j7EL/4xc9R4gvMT6zS+/pbfPD2OWwSnHr9XXoaghimCbKTUxff
      4OfnW1G8XZw8cZK3zw8eGrCu5rHa3EiShCQVWV/dwUBlbXWL1NYSa0U33XUepqbmaevrZfr2
      V8RyRUbu3Ca+sY678yR9fgWivZw6d5GL4uKvag4xQJZvrl5lUbERkmQk08Tu9uNxWGmrDbOV
      h7DThixLYHUR8DlYm7rP1aufEsvZaBnoYHXka65+eRecPtwOC8gWnA476Dnufn2Na5NJ2mtt
      6KlNro1MHhqwyxMlsT3FxtYmW/sZDDXL1toqBwUNSXJx7Fg7EhJ1bV2EPTacvghDJ8/w1sUz
      2GQH4bAXu90OkkQ2ESOezCKyANXLS8sCxbfX0ZxBokHvMx5pkj3YZnZph4aOHiyZTTZTBjWR
      GkIOGTkUwq6ppPJFgj4vxUycmbllnOFGmv0OpGAQOZ1Ad/tJrs+TMv30dDQcaUDk3vgsf/k3
      4iG4khFp0BIYn17gb64vl03fME1kqXxZNKEvDFASW1tbNDQ0lE2/3ANtQl9MhRBUOeUbpqsC
      jOQGmf/3T8umb5omahm7EEK/Ag2gKwXu3fySg4KNgXPnaQk/60P0c8TQMNMlDMY9BeXun1a7
      fgUaQMPd0M7Z7h4kQDcMLBLohsns/fvUDQ8TsNmAx/07E8A00Q0Dq9WCqqpIshWbVWT/BRVo
      ANBZfDjC2vImp441MXdg40q3hRvjCWLz06zmChzraSQRd9LszbIj24lPTpB11HCs2cnYxCKG
      NcTP/vAtPD/daUqCp6QCH4ItdJ24wIfvv0190IVpmmiqgmH1MzDQz2tXLhNy8u37KoYJrnAT
      77x1np2VZbzhWuoiXnTtZX8PwatAxRlAkmVc36W+XEGk/Vm+GJnG5rAR9lv56rPPyRoB9ldH
      uT+zhtXmwB8IIEsSx/r7yKZSFDSTn/AkVcEzIMYBSmBj8hb+q//iZYchKAFhgBLYWlsmak2V
      Tb8SCkoqXV+URJZAOq+Ar7Zs+rqkYynjXFWhL1qAkphfWmVmu1A2fU3TsZYxXSv0nyINmt5Z
      4uboHE19Jxhoq2FlapS57TynL5wjLKXZ1YLU+V9kNtXkh5aVyjjSeBjJTIH/8ksxG7SSOTQL
      dHd8jjfffZuQAw42ZtkqBnjjwjEe3r2PktplM6W/iDh/g6kpjHz5CR9/cpWx+RJGYdU8m7vx
      5xeYoCI59NbdVufj06u/pvfEBYxUgqaO13B4JGp98xQU44UnUnPZXew1g/zBUCuQZ3F+nbbu
      KMvz20QcsJmLg7UGh5HiIKnS3hJmfHyaaOcwzfY8j9ZXyBVc9NbDZ6Iksuo59PJt6D7Jh++/
      ye7CNJLLTToRR9cKFFQJm+3FDyMYuopssX/7SmFnK4aJyvbWHpm9dZK2Wnrqfays79AzeIzZ
      u7dIFBTGHz0kubNL5NhZBiMgi5JIAU/RAiw8vMFaXCXY1E20sZ6tO7f5ZCyFq2kAh9PO4lef
      szsZ4PL7l/C8gIDdniipnRFmrCmcXhd6McH89AzxvEa710VnZxNSNkVNYysBlw1PKEJHqBm3
      04XlYJ9AwI1124YuyaT3N1nfCdJYF6q8EUHBc+FoWSBTI36QIRgKlLXi53ecnEI6ztr2AeH6
      Jiz5GLGcQcAfxGeTkHw+bLpGtqjidbtQ8inW17ex+WuodduQvF6kfAbD4SG7t0HWdNPcEBEl
      kVWKSIOWwOTsIr+8+9trHD0vKmFpwUrXFwYoAVESWfn6ousrqGoqsB7g1cFIrJL+X39U1nMo
      ZVUX+hVnAK2Y587Xn5FUnAyev0BrxPebv+mahmy18sIey00T9OKLOpugDFScAQxVJ9Dax6We
      HjA0CoqK0ypRUFQmR0aoHRgi6vchmRIW2URHAl2jUFDweN2kk0ksTi8+d/n6poLKoeIMADoL
      Y7dZXVp/oiRy5FGa7M4uOfcKUqOfWOz7ksjY5ARmqJlmn8LYzDoGHt7/k/fxiSegqqcCL4Hf
      LolUink0i4fOjjaGTp3E53i8alixWEA3wRNp4eL5YWLb29S1dtDT2QgvdgqT4BWl4gwgWSx4
      3e7HL9xh7IkFvh5dwe91Ulvj4cZn1yiYYZKbD3m0vI/b6SIUDiJLEoPHB0nubBHPFLFU3DcX
      lAMxDlACoiSy8hEGKIGtjTXqvOXLOSmqiv3bNY6Efnn0RUlkCaSzeZB9h3/wiOg6WNQylhQK
      fdEClMLswjJ3l55u97SjoOs6Fks5LyCh/1Rp0MT6OtbmZl7iKpw/wERXFXIFBbvTjcP28mbz
      p3MKf/v5xEs7v6B0nioXkt7bI28apBMx9mIHqKpCvqgBBoWCQj6TYHdvn4Ja/tyioRYY+eZL
      HoyOsrC+f3QhNcfqVgnHC34SPP0ukZrC1NgdVrbzDJwfJhdXGe50MbnnwpuZ5tHSPpHOE7x5
      qruc8ZLP7uKqHeC1wWYgx8zUMt39DcxNbVDrNFnJxHG66pEKe6RyMu1NASam5gi3DtBqy/Fw
      Y51C3kFvs40vRkRJZLVzSAtgYOgGyWwOvZimiJfmGjfJgh2/NcfDuV06WsPsJ/N0ttaTSiTK
      HrBpGiB9F7ZKfD+JiUZs/4D8wS5mqJ2eBj+7B3kGT/Qz92CEVFFlYX6eTDxJ84mLnGiwY6sT
      JZGCQw2Q5+Znn5LyRqmxubAaOfKSh4jPRWtjFMXqxe+w4nfb2U9r1EdDZQ/Y5YmS3Z3k3v0H
      zK0l0fN7jN0fZT+nIUlOmptrkZAIRevxOmwEa2qIRhvo7mjBIlnxeJ1YrVaQZZJbS8yt7GCU
      PWrBq0oFZoFMlHyGWCKLLxhGUtKkiyZutxuXRUJyubAYOkVVx+mwoyl5YrEEVpcPv8MCTieS
      UsC0OSik4hRNB5GQ70gzSEVJZOVTgQZ4dZieW+KLyfKNm1RCGrHS9YUBSkCURFa+fgVOh36F
      MA1MJVs+fVXBlMq4k4fQFwYoBSOxRuZvPyjrOV71ksJK1684A2iFHDeuf0pW9/xWSaRSKGB1
      OitvjrfgpVFxBjA0g0jHAG/09ICukM4V8TkgnS0yfusmob5+WuqiyIaM3WKgImGqKulMlnBN
      kN3NbWy+CNHQqzGxQ/ByqTgD/K6SyNHpHLqqUiwUSSc32N37viRyf2ICZ1MPqZ15Hi7soGl2
      fv6P/4iAGAGreirQAI9LIgd7eiC1zmysSCGXR5VcNNdFqenuwpJYwjAN8rkMmieMr7aV48d7
      GP1ijs7+YfxWsIrcl4AKLImUrVaCvm/7/Z4aPLlVbk3tUBv2Ut8YYuTaFxTlWnK7k8zu5Al4
      vNTURpAlieOnTrK/Ms/6flrsEikAxDhASYiSyMrnCQMILzwb21ub1NUEy6avKgo2u/3wDwr9
      I/PEM4CqqqIk8hlIZ7I/mJn6/Hk81F++TfiEvugClcT03BLXJsp3wzAMHVkuX6pK6D9FFqiQ
      3ObWyEMsvkYuXBgkub6B7PVgszvxu10lnfxofD8b1BsM43OVr4k9jGxB5ZM78y/t/ILSOdQA
      4+NTnLj0Dh4U4iuP+PWXY9hcFiKNg7x5cZgXvU2YruS4e/s2zkAEv2bF11JzNCElw+JOls6W
      uucboKCiONQAmsVJyG0FrNS3dHLmfICAK4+7pueFX/zwuCTSEx3gxEAjkGXi4QLHhpuYfLhK
      vctkLrVPwN+Cmlwnq7noaPAyObtEsLGHdnuO+5tbqDkLfW0ert+dZ0eURFY1hxrApueJZVW8
      FFibH+POow3seo7GIQuXT3e/8AtHkmQwv6vh0kglM5jopJJpQpqKr2WQPo/Erf1tzpwd5O4n
      f0dW9pLd3KQu7KDn/Bu4l8ZR6rs4da6WU/0dL/gbCF4lDjXA8Inj3Lx5DdnfxPnhU3zQMoS1
      kMPX0PhS7pouT5T83nW+vL5ETUsLWmaDb77aJ5710O51EI0GIZvCH47gstmoqauhkLXgC4WR
      jQJOp+3xvlKyhYO1acZkC0N9raIFqFIqMAv03bpAKnanC0kvouhgs9mwSiDZbEimga6bWK0W
      DF0llysg2xw4LBJYrUi6hmmxohXy6FhwuRyiJLJKqUADvDqIleEqX18YoARESWTl61fgbNBX
      CEPDSK6XTd5UFIwyTiUQ+sIAJWEkN8j+z/JOhlPLqi70K84Aaj7LV19cpYj/t0oi85kMdq9X
      ZHQET03FGcDUTeq6jz8uiFHzxFM5wh6JeCLLg2++wd/VQ097G7JhwWnRKUoSZrFIPJ6ioTnK
      6sIC9lATbfXlX8VO8OpTcQb4XSWRE4tFvB4vwVAQNbfN5s73JZF7jyYI9QxTfHiLsZUDtMIs
      vj//R4Qr8NsLni8VVxH25C6RbgzDIJdOophWQn4P4bp67DIYhkE2nUQ1IFDXxkB3M9lMgeFz
      l3jnrfM4X/bXELwSVJwBZJuNSPDbIhRvlLCywd3FFM11AZrbG7h/7QsUaz3KwQzLSagNBKir
      r0WWJIbPnWVrZoy59ThyxX1zQTkQ4wAlsDF1G/+v/+XLDkNQAk8YwDAMdF3sIP207OzsUFdX
      vunUiqJgL2MeXej/g4dgXddJJpMlCVYThUKhrL+XpmmP9zIQ+mXTP7QLlI7vEE8XcAdqiHgd
      KIaB024nl03jcNjZ3tpBx0K0oQGntbo61pOzi/z9yGbZ9A3DeDxzVeiXTf9Q+0xPTuAJRVme
      m6ez/yQ5PUtfayszj0bp7m3h0cwejRGDld0sV870lhTM02AaOkuT95hbT9DSf4qBttqjCekq
      6YKGz3P0ss58UePmRPmmQgjKz6EGsHpC9A8M4CzEyKo6myuz5ONxNmIZuoFoSxf9bRZuPlh4
      AeFCMbfPXt7Duz87g64ViceSBCMeDmIZ3FbIKFkU043bqpNK5aipCbC6vEqwsZOQRWEztkNe
      c1HvynF9bI2hoWG62usrLx0meC4c+v9ejK3yydVfsWdtoskr4QuEiUajvylGn7l/nc++ukdH
      b1/ZgwVQiync/ihWiwWHQ2VmchmDItOTC8QWpniwuo9LUrl75zaq1cH0yFeMz8zy+ZffsDs/
      w7ZmR99dIil7CIRChAKeI9UCCH4aHNoCOCKtfHjqFAC5WAx/uIbGxkZ21h7f8ftOv8GpvnB5
      o/xhPM4wB7sLFDsDKMUChmGgZFNkFB3J6+D4yWH8+TTRtl66miPcnrZy5tIFnBhIW1t09HRg
      NZIUXH48nhzhoFglupo59CH4h0UHpmFgABZZRtc0ZIuMYUhYLC/uHmqaJvGNWe5PrtExdBpL
      fJ7FA436+maaPVbkxkY8SoHdZJb62gjp/VVG7k/haejmWNiF3NiAvL+F6o+yMzlCwhLl7HDX
      kSbQiYqwykcMhJXAg0dz/If/PVY2fdMEqYz3FqEvDFASoiKs8vVF8kNQ1YgJwSVgZvfI//1f
      lU3fMAyMMg8kVaK+bfjPsLZffi5aFWcAQ1NZXZojp1poaGsn5ClfE3sYppJDW/i8rOcwDv9I
      1elb2l5/bloV1wXSCgU292O43W6s/yD7tDozQ+4lxSWoTCquBQCT9ME+m5ILr0NnJmnlbJvM
      3ekDlsbu4FxdZ3ioh3zGQb07z75sI704z17RxvCxeiYezSK567h8+RQvb11pwatCxbUAIFPb
      1MHgQB8Bh0S+qIKhkTe8nDxxkrd/9i4hh0qxqKGrCoqqophOLl+5wMrkQ/KaQTGTIF/u5QoE
      FUEFGgCcbg8Bvw+b20d65SGfXLtJVtNxyzk+vfoZKcXJyvRtrt8eo2BIuL1+7DYLHS2N5BUT
      u+NoSyEKfnqIcYASEJvkvRwc7/w77Cf+XKwM97KR3GEc7/77sunrmoaljAUllapvaTr93LSe
      aAEURRGb5D0D6XQan893+AePSCUsLlvp+qILVAIrq+vkzPKNQ6iqhs1Wvju00H+KLlBsc5mt
      eJZAtImW6I/viZtKpfD7/SUFUonsJ3P85d98/bLDEJTAoVmgpZU1/H4PGxP32Mn/8C9Jpqe3
      AFhYeDHVYACmoTF972s+/vgq40s7RxfSFQ5S2ecXmKAiObQFsDi9tLS0UNheZnN5mny4BWd+
      k829FUbH90ioF+Bgnasfb4G/iUu9AW7cmUCzerl0pZ+7v7qLbi9S232ZM71HrN/9AYXsHmkp
      yvsfdGMYRXa2Y9TWB9jdTuCzQbKYomB48dk1YrEMjY0RZqdnqW0fpNZaZGl7jazqoc2f57N7
      ywweP83QMbFFUrXylCWRvybj72SoLcre5iI7sQz9p09x6tQlXjveiT3QwHsfvEetS2Z/a53+
      Sz/nQleEzYME4eZ+3v/5O8i557N8iKZkcHpCWGQZm1VhcW4dgyILcyscrMwyuadQ57Xw4P4Y
      vto6pm59wfzaJte+/Iq95QUK/kZC6j4FTwMdXb30tNdV5mCI4LlwaAvgqmnjtZMnH78wTYLK
      XXb9QzgtTvaXv+SW1cBpsWKRJSwWC6HaKF9f/wjd4uD1t46zsa8hISPLz2foyemqIbY9SabV
      g6rkMHSNXCJOqqgjeV0MDffhyKWp7+ilscbLpiPA5XMXcJoqyuoqjc11WLNbFGwOMA1sVnHv
      r2aeKQuUT21x884sp19/naDrZQ0hmKR2Vrg/sUL74EmsySUWYxqNjU3UuyxI0SgutUgsnac2
      HCSf2Obeg0lc9Z30ht3I0Vrkgz00X4T92VFihDk12CFKIqsUkQYtgbHJef76o+my6ZumiVTG
      mkKhLwxQEqIksvL1xfOfoKoRc4FKwEhvk/3y35ZN3zQNNKl89yihX4EG0NUiMxOjpItW2vv7
      qfO7X14wWhFja7Sspyh3/7Ta9SuuC6QXFXKmle7uDgKuJ2u6liYmEGO7gmeh4loAMNhanCa2
      n+HEsSaWkjYudlq4OXHA+sRdnJvbHB/sJJN00ujJsSvbSMxMETc8nDgWZXJyEexhrrwt9gkT
      VGALABY6jp/lZ+9eoc7vQNMNDENDlf2cOHGCt957h7DTQNcNDF1DNwwsnlree/d11qYnKGoG
      pl6gKEoiBVSiASQJm9WGLMtITh+FjQk+vX4PDfA7VD7/9HMymoeN+RFu3J9Clyx4vD4sskRv
      dztFzcRqtVXgFxeUAzEOUAKiJLLyEQYogc3VBWqLi2XTr4Q9tipd/4mjRUnks5Ep6Ei+obLp
      V0JJYaXrixagBJZW1tjJlG+uSyXcQStJvy7soaMh9MR7hx5t6gUmH45juOsY6BOFIz8knsrz
      V2I2aMXw4YVu/uJPzj7x3qHJkImRG9hq2qjz2tGA9cVHbOx+N9wU487t+bKP9v0QU1cZu/kZ
      H338CWPzW0cX0orsHaSeX2CCiuTQFiBlOLnYEkXCYGXiLjcejCE5FhgaPMbO+jizCzlysspb
      5/pfRLzks7vong4+fK0D0yyyvrZDY0uYjbV9gjaJWOGAvBEg4FDZ3U3S1lbHwwcPaeg7S6Mt
      z/TaImnFS09E4Ve35+kfPsf5kz2iZatSDjWAhIlumMhA6+BZsFuQfD201nsZGghj/yrG5XPH
      XkCoj9HVHDZ7AEmSkKQia8vb1Ld4WV3eRPIUWHY28Hqbh2tf3+LM5TeZvv5LYpqL1Zs3eKMz
      grN9mIbNKYzaPk6dq+VUf8cLi13w6nGoAY61BPnoo4/x+qJcfPMs4dpmsH83B9tLV9eLnU3h
      ckc52B5jJwLIKoaaY3dzg0RBp93rpn+gEymbor69m4jHhsMb4WTXEC6LhLm5QSTiw7pvpyBJ
      5FIHJDN1+L1usVZolXLo1RtqGeSPWwa/fyP4w5UdXDQ2Hn2n9aNgdfk5PdzN9MIajV19dHeF
      2djXGB7qJOSQkQDZ4aKlIQpYGDg5zNTMIsVIM61trciA1NCG2+NFrnGysZPAJwxQtYg0aAmM
      Ty/w366VbyDMME3kMpYUVpv+xaFm/vTKk8+qwgAlIEoiK19fzAkTVDUVWA/w6mCkNsl88s/L
      pm+aJmqZV1V4VfUtNT24fvGfnnNEv03FGUBXC4ze+YZEwUbf6dM0h7wvMxjMxGpZT/GqlxSW
      S99wlG/Z+R9ScV0gvahhCzdy5cpFGgJuDNME08QwDGYfPCCl6ximifnEv8cFMqZpous6hlHu
      zUEFlULFtQCgszxxj421bU4da2LuwMaVbgvfjB+wOzPG3EGCwb5WkgdOmr1ZdmQ78akJ0tYQ
      g+0+Rh8tgC3Mex++gVvkPqueimsBwELXiQt8+P7b1AddmKaJpqkY1gDHjx/nyttvEXY9bno1
      TcMAXMEm3nvnIltLC7j8IcJ+B5r2sr+H4FWg4gwgyTJO+7erQbgCmHszXLs9idVuJeST+fLT
      z8nqfvaW73NvchmL1Y4v4EeWJPqP9ZLLZlENiee0Vq+gwhHjACUgSiLLh1w3iOef/O3v/YzY
      JfIlI/nqcf3Zfy2bvqaqWG22qtSXbC9mwTOxS2QJiF0iK19fdIFKYGFplfk9pWz6mqZjLeMG
      Hj8l/SvDbbidz97aHNoFyuyucHt8nsbu4/S3RlidHWd+O8/Jc2cIk2ZXDxD1PZYxdZXZ8Xts
      ZWROnj5J0G0/RL2ySWQK/PXfiZLIV4ETXfVHMsChWaC7D2e5dOUyPqtBfHOO9ayL1051MTZy
      n2J6h42k/pvPJvYWSEkNnBvqRFM1DF1DVVWMbweqdE1D13XMb19/l8JUtW/f03U0Tfu9o4em
      XuTul5/w/z76mAdzm8/8hX+Dmmdr7+Doxwt+EhzaAjTXuvj1rz6n//RFSBzQ3Pkabr9ErW+B
      QtF4wkKeQB3Z0a+5lW7k/Jle7nzxa7ZTWZoHLmHsjpEuOojW+vDWD2DGZ7A6/UxMPiKXk7j0
      4WXGfvUFrsZeXn9t6HcGlsvsYo0M8IdvtgIFlhc3aemsYXVxh5AdtnMHGJYILilD/KBAW0sN
      4w8nqes+QZMtz+T6MtmCm546k8/uiJLIaufQFqCl7yx/8MGbbM1NIjldZJIJdK1IUZWxWZ88
      3GrzcOndP+BMi5OZqWmWYkUitXU4rSayPcSb775NX2cbsY1pEoobNbONKrmpqwtgqhKR1n7e
      /D0XP4ChK8iW77pWRbY29jBR2dzYJbO7RlwO01PvZXFpg66BPmZHbpAoKIyNjpLc3iHYe5aB
      sIkc7eXUuYtcFBd/VXNoCzA7+jXrBxr+hi6ijfVs3L7FJ6NpXE2DOJ02Fr76jN3JIJffv4Sc
      3uPGnXFUbAyeOYWUSbCTzhFqsuALBrFKgDeMozCJs7ODZpefhbX75IoyFouFQODwjIrLEyW1
      c495Rw6Hx45eTLI0N088r9HuddHV3YyUTVHb3EbQZccTjNBd247b4cAS2yMYdGPdsaFLEpnY
      Nlv7IepqgpU3Iih4LhwtC2SqxGIZgpEgljJOp/0dJyefirGysU9NUyuW3D67WZ1QIITfLiP5
      /dh1jUxBwedxo+SSLK9uYvfXUu+1I/l8SLk0hsNLemeVLF5am2qOZACxS+Srw3/+N39EfeTZ
      ZwaLNGgJTMws8n9vr5dN3zAMZLl8bdNPSf9f/ek5Qr5nr08XBigBURJZ+fqi6yuoasRcoBIw
      Emuk/8+flvUc5Rtnfnp9719cR7L8NAc1K84AupLnztefkyg6GDx/gdbI95kjQ9eRLJYXt8aP
      aYCSeVFnE5SBCjSAjr+ll4s9PWDoFFUNhwWKqs7U3RGiQ8ep8XiQTAmLZKJLgG6gKCpOt4Nc
      Ootsd+Fx/TTvaIJno+IMADoLY7dZXVp/oiTyzqMU6Y0NkjYHekuYeOz7ksjY5ASav5H2sMHY
      9CqG5OP9X7yHVzwBVT0VeAn8dkmkUiygW7x0d3Vy4uxZ/A6+f98ET6SZyxdPsr+xQU1DKx0t
      UUz98DMJfvpUnAEkiwWP69t8rzuM9WCerx4s4vE4qIm4uPHZNfJmiIONhzxc2sXpcBEMBZEl
      iYGhAZKxXZI5RZRECgAxDlAS1VIS6f3X94+UBaqEcYAKfAZ4dZD9jXj+2S/Lpq+oKvYyliw+
      tb5cvhheNqIksgRESWTl64suUAnMLa7wYKV84wCVcAG9Cvot0QAXB5uPpHH4LpGmwdzYCOG+
      89S4fvzJcXNjg8amph8PUlNBtmKRJdCKbMbSNNbVHCnYx/GYxNZneTC1RsfQGbobQ4cf9KNC
      BpphYi3hPyiVLfLfPx0/8vGC58Pl4y1lNICRI5HJom7sU9Nd+6OfOUgkfqcBsrEd9EADIacF
      DI2DZKYkA2iFFHMbGd54+w2UYgm5zGKamfUUg90tR5bwe+z8yfkf/97PBdOEcnZ1dxIAAAMf
      SURBVE43/4noN0TcbG0dbcdQ0QUqAVVVsZXxIVXol1+/4sYBBILniTBACZTzAU/ovxh90QUS
      VDWiBRBUNWIkuEQKqR2uf3WbvOThzbffYHN+mr6BTm7cnOLy5bPPXJtwsL3E2Mg4ja9/QJdP
      ZmZhgc76AA9X0pw70VtarYNeZGzkFpuxNM6aDvr9FszuLrTZB6h1x+msKXHPZ0Nl4v4tVneT
      2PwtnGgOUgiHcGwvEPN10d/gL00fwDRZvn+NB9ka3j9Wz45pEirGWdMjHO+IPvPvI7pAJbI9
      f5+cv59QdoVtZxRlawmzmKbxxBWi7mfvoxqGQXZliq1gN10eifHJh+h5he7TrxFwlNhgmya6
      YYBRYHRsnnqHBaXexfqKzuUzvaVnLE0TwzQopGOMPlqhoz5CxqGyvaly6dzgc1hBxETJ7DIy
      ugxOFyeao6xl90nsq5w+exKH5dn1RReoVEwTq92OwyGjKCbx9TnmD0xCzqP9tLIs/2DzZ5P1
      2Ufsag68tueQT5egmNrnwcM5eoYGsEl57l2/h6++7vmk6yWJQnKL2yOPcPhDWCkyfus+9tDR
      lp35h5imyaMHU3T0tKAUi2iGwsyDMTR3ANsRTyAMUCJ2t5fNxRmml3cI+xxEWvr44Hw7I6Pz
      GEdoW5V8hlgiSSIeo6BB68BZzjQ7ebSwRclttZ7n4cQ89c1NaIUCBi4u/uKPMZZG2cupJYqD
      oanE0iqDxwcoHqyTURyc/tnP8cTm2EoXS9YHHYvNwtzEI1ZW10nlYPD1t6jX91jZSx/p9xFd
      oBIxDZXV+VkK9jDdbQ2kEwcEgkH2t7cJ1Tc8Xg3vGUjsLDO/uocJtPUOY6dAwOdmdy9BTbSW
      I7Ty36MVmZ2ZIplTcfgidNVFkAI+7EqaeM5KNOwpQRxMQ2dnbYH1vTR1rd3UuS2odjtuSWE7
      YdBQ+xyeAQBDU4incgTdTvKmidcGO/EidbXBZ27JhAEEVY3oAgmqGmEAQVUjDCCoaoQBBFWN
      MICgqhEGEFQ1wgCCqkYYQFDVCAMIqhphAEFVIwwgqGqEAQRVjTCAoKr5//WGQKHfCsX5AAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 5 countries where users belong' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='the end' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAACOUlEQVR4nO3bMQoCQRAAwVUEI///PVPR7DIR9z7hckJXPWCYpGGSOc0554Co89ELwJEE
      QJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZB2WTH08XyNz9efDf9vSQD3
      7T22623FaPgpJxBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBp
      AiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBN
      AKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRA
      mgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJ
      gDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBp
      AiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkLYDpncPDdLrfJwAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
